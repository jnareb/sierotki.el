head	1.47;
access;
symbols
	before-split-into-branches_1:1.25
	tex-toggle-magic-space:1.25.4
	multiple-advices:1.25.2
	2_3_5-fix:1.16.2;
locks
	jnareb:1.47; strict;
comment	@; @;


1.47
date	2006.07.04.00.18.52;	author jnareb;	state Exp;
branches;
next	1.46;

1.46
date	2006.01.29.15.34.43;	author jnareb;	state Exp;
branches;
next	1.45;

1.45
date	2006.01.29.15.26.49;	author jnareb;	state Exp;
branches;
next	1.44;

1.44
date	2006.01.22.13.17.15;	author jnareb;	state Exp;
branches;
next	1.43;

1.43
date	2006.01.21.11.51.06;	author jnareb;	state Exp;
branches;
next	1.42;

1.42
date	2005.11.28.23.32.24;	author jnareb;	state Exp;
branches;
next	1.41;

1.41
date	2005.11.03.22.26.53;	author jnareb;	state Exp;
branches;
next	1.40;

1.40
date	2005.02.03.03.35.38;	author jnareb;	state Exp;
branches;
next	1.39;

1.39
date	2005.02.03.03.31.54;	author jnareb;	state Exp;
branches;
next	1.38;

1.38
date	2005.02.03.02.59.28;	author jnareb;	state Exp;
branches;
next	1.37;

1.37
date	2005.02.03.02.46.11;	author jnareb;	state Exp;
branches;
next	1.36;

1.36
date	2003.10.24.19.05.13;	author jnareb;	state Exp;
branches;
next	1.35;

1.35
date	2003.10.24.07.53.58;	author jnareb;	state Exp;
branches;
next	1.34;

1.34
date	2003.10.22.19.30.38;	author jnareb;	state Exp;
branches;
next	1.33;

1.33
date	2003.10.21.23.31.26;	author jnareb;	state Exp;
branches;
next	1.32;

1.32
date	2003.10.21.23.25.43;	author jnareb;	state Exp;
branches;
next	1.31;

1.31
date	2003.10.21.22.34.24;	author jnareb;	state Exp;
branches;
next	1.30;

1.30
date	2003.10.21.19.39.27;	author jnareb;	state Exp;
branches;
next	1.29;

1.29
date	2003.10.21.19.13.23;	author jnareb;	state Exp;
branches;
next	1.28;

1.28
date	2003.05.29.18.22.47;	author jnareb;	state Exp;
branches;
next	1.27;

1.27
date	2002.12.13.19.56.58;	author jnareb;	state Exp;
branches;
next	1.26;

1.26
date	2002.12.13.00.47.21;	author jnareb;	state Exp;
branches;
next	1.25;

1.25
date	2002.12.10.22.33.53;	author jnareb;	state Exp;
branches
	1.25.2.1
	1.25.4.1;
next	1.24;

1.24
date	2002.11.30.00.01.30;	author jnareb;	state Exp;
branches;
next	1.23;

1.23
date	2002.11.27.12.07.57;	author jnareb;	state Exp;
branches;
next	1.22;

1.22
date	2002.11.26.14.10.02;	author jnareb;	state Exp;
branches;
next	1.21;

1.21
date	2002.11.26.00.09.20;	author jnareb;	state Exp;
branches;
next	1.20;

1.20
date	2002.11.21.02.48.38;	author jnareb;	state Exp;
branches;
next	1.19;

1.19
date	2002.11.21.02.34.32;	author jnareb;	state Exp;
branches;
next	1.18;

1.18
date	2002.11.21.02.20.19;	author jnareb;	state Exp;
branches;
next	1.17;

1.17
date	2002.11.19.22.58.24;	author jnareb;	state Exp;
branches;
next	1.16;

1.16
date	2002.11.19.13.50.03;	author jnareb;	state Exp;
branches
	1.16.2.1;
next	1.15;

1.15
date	2002.11.18.21.12.26;	author jnareb;	state Exp;
branches;
next	1.14;

1.14
date	2002.11.18.20.40.03;	author jnareb;	state Exp;
branches;
next	1.13;

1.13
date	2002.11.18.20.21.47;	author jnareb;	state Exp;
branches;
next	1.12;

1.12
date	2002.11.18.20.13.45;	author jnareb;	state Exp;
branches;
next	1.11;

1.11
date	2002.11.15.10.32.01;	author jnareb;	state Exp;
branches;
next	1.10;

1.10
date	2002.11.15.02.49.48;	author jnareb;	state Exp;
branches;
next	1.9;

1.9
date	2002.11.15.02.08.28;	author jnareb;	state Exp;
branches;
next	1.8;

1.8
date	2002.11.15.02.06.11;	author jnareb;	state Exp;
branches;
next	1.7;

1.7
date	2002.11.15.01.53.52;	author jnareb;	state Exp;
branches;
next	1.6;

1.6
date	2002.11.15.01.35.02;	author jnareb;	state Exp;
branches;
next	1.5;

1.5
date	2002.11.15.01.25.51;	author jnareb;	state Exp;
branches;
next	1.4;

1.4
date	2002.11.15.01.20.19;	author jnareb;	state Exp;
branches;
next	1.3;

1.3
date	2002.11.15.01.02.39;	author jnareb;	state Exp;
branches;
next	1.2;

1.2
date	2002.11.15.00.30.51;	author jnareb;	state Exp;
branches;
next	1.1;

1.1
date	2002.11.15.00.16.05;	author jnareb;	state Exp;
branches;
next	;

1.16.2.1
date	2002.11.22.11.45.12;	author jnareb;	state Exp;
branches;
next	;

1.25.2.1
date	2002.12.10.22.41.26;	author jnareb;	state Exp;
branches;
next	;

1.25.4.1
date	2002.12.10.22.43.39;	author jnareb;	state Exp;
branches;
next	;


desc
@@


1.47
log
@FIX: wy¶wietlanie informacji o trybie i sprawdzaniu w modeline
(w nowym GNU Emacs u¿ycie listy przesta³o dzia³aæ).

Uzupe³niona dokumentacja.
@
text
@;;; sierotki.el --- Introduce tildes after single-letter words
;;
;; Copyright (C) 1999-2006  Micha³ Jankowski, Jakub Narêbski
;; 
;; Authors:    Ryszard Kubiak <rysiek@@ipipan.gda.pl>
;;             Micha³ Jankowski <michalj@@fuw.edu.pl>
;;             Jakub Narêbski <jnareb@@fuw.edu.pl>
;; Maintainer: Jakub Narêbski <jnareb@@fuw.edu.pl>
;; Created:    3 Nov 1999
;;
;; Last-Updated: Sun Jun 25 20:49:08 2006 (7200 CEST)
;;           By: Jakub Narebski
;;     Update #: 107
;;
;; Version:     2.8.2
;; RCS Version:	$Revision: 1.46 $
;; RCS Date:    $Date: 2006/01/29 15:34:43 $
;; Keywords:    TeX, wp, convenience
;; URL: http://www.emacswiki.org/emacs/sierotki.el
;;      http://www.fuw.edu.pl/~jnareb/sierotki.el
;; EmacsWiki: NonbreakableSpace
;;
;; Compatibility: Emacs21, XEmacs21


;; $Id: sierotki.el,v 1.46 2006/01/29 15:34:43 jnareb Exp jnareb $

;; This file is *NOT* part of GNU Emacs.
;; This file is distributed under the same terms as GNU Emacs.

;; This program is free software; you can redistribute it and/or
;; modify it under the terms of the GNU General Public License as
;; published by the Free Software Foundation; either version 2 of
;; the License, or (at your option) any later version.

;; This program is distributed in the hope that it will be
;; useful, but WITHOUT ANY WARRANTY; without even the implied
;; warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
;; PURPOSE.  See the GNU General Public License for more details.

;; You should have received a copy of the GNU General Public
;; License along with this program; if not, write to the Free
;; Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
;; MA 02111-1307 USA

;; http://www.fsf.org/copyleft/gpl.html

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; 
;;; Commentary:

;;; Installation:

;; To use this package, put the following line in your .emacs:
;;
;;    (require 'sierotki)
;;
;; If you do not want to load this package before it is necessary, you
;; can make use of the `autoload' feature, e.g. adding to your .emacs
;; the following lines
;;
;;    (autoload 'tex-magic-space-mode "sierotki"
;;              "TeX Magic Space minor mode" t)
;;    (define-key mode-specific-map " " 'tex-magic-space-mode)
;;
;; Then after turning on `tex-magic-space-mode' via `C-c SPC'
;; the whole package will be loaded.  Attention: using autoload means
;; that this mode _can't_ be turned on automatically in LaTeX modes.
;;
;; If you want to have the TeX Magic Space mode turned on in known
;; TeX modes put the following line in your .emacs after (require 'sierotki)
;;
;;    (turn-on-tex-magic-space-in-tex-modes)
;;
;; If you want filling (`fill-paragraph' and `auto-fill-mode') to not break
;; line after single letter words, put one of the following lines in your
;; .emacs after (require 'sierotki)
;;
;;    (setq fill-nobreak-predicate 'fill-single-letter-word-nobreak-p)
;; or
;;    (setq fill-nobreak-predicate 'fill-tex-magic-space-nobreak-p)


;;; Installation[pl]:

;; Aby u¿yæ tego pakietu, umie¶æ nastêpuj±c± linijkê w swoim pliku .emacs
;;
;;    (require 'sierotki)
;;
;; Je¶li nie chcesz go ³adowaæ zanim nie bêdzie potrzebny, mo¿esz u¿yæ
;; ³adowania na ¿±danie, np. dodaj±c do .emacs nastêpuj±ce linie
;;
;;    (autoload 'tex-magic-space-mode "sierotki"
;;              "TeX Magic Space minor mode" t)
;;    (define-key mode-specific-map " " 'tex-magic-space-mode)
;;
;; Wówczas po wci¶niêciu `C-c SPC' zostanie w³±czony TeX Magic Space mode
;; i zostanie za³adowana reszta funkcji.  Uwaga: przy u¿ywaniu
;; automatycznego ³adowania ten tryb _nie mo¿e_ byæ automatycznie w³±czany
;; w trybach LaTeX-owych.
;;
;; Je¶li chcesz by TeX Magic Space mode by³ automatycznie w³±czany
;; w znanych trybach TeX-owych dodaj nastêpuj±c± linijkê do swojego pliku
;; .emacs po (require 'sierotki)
;;
;;    (turn-on-tex-magic-space-in-tex-modes)
;;
;; Je¶li chcesz by Emacs ³ami±c wiersze (`fill-paragraph' i
;; `auto-fill-mode') nie ³ama³ linii za jednoliterowymi wyrazami
;; ('sierotkami'), dodaj jedn± z poni¿szych linii do swojego .emacs 
;; za (require 'sierotki) 
;;
;;    (setq fill-nobreak-predicate 'fill-single-letter-word-nobreak-p)
;; lub
;;    (setq fill-nobreak-predicate 'fill-tex-magic-space-nobreak-p)



;;; Description:

;; The purpose of this package is to connect some defined words (by default
;; one letter Polish prepositions) with the following words by tilde, which
;; is the non-breakable space in TeX.  This is needed to avoid one letter
;; prepositions at line endings in TeX documents, which is required by
;; the Polish and Czech typography/typesetting rules.
;;
;; This program serves two purposes.  First of them is to check the text
;; and suggest adding missing tildes in some places.  This function is
;; implemented in `tex-hard-spaces' via `query-replace-regexp'.  It is
;; provided for convenience only to have both functionalities in the
;; same module.  More elaborated implementation can be found in the
;; `tildify' package which is part of GNU Emacs (ATTENTION: default
;; variable settings in the tildify package are suited for Czech
;; language, those here are for Polish).
;;
;; The second purpose is the automatic, in-the-fly insertion of tildes
;; after one letter prepositions during writing.  It is implemented
;; via the `tex-magic-space' command which is a kind of electric space
;; and should be bound to SPC to work.  To activate this functionality
;; you have to turn on `tex-magic-space-mode'.  After loading this
;; package this command is bound to the `C-c SPC'.  The minor mode TeX
;; Magic Space can be also turned on from the modeline minor mode
;; menu.  This mode is denoted by " ~" in the modeline.  The ":Chk"
;; after " ~" in the modeline shows that test are enabled.  You can
;; enable tests using `tex-magic-space-toggle-checking' command, bound to the
;; `C-c C-SPC'.
;;
;; For the time being the tests in `tex-magic-space-tests' are in early beta
;; phase; if you want to insert ` ' where `tex-magic-space-mode' inserts
;; `~', use `C-q SPC' to enter single space, or turn off the TeX Magic Space
;; mode fro editing the fragment of document where nonbreakable spaces are
;; not needed.
;;
;; The TeX Magic Space mode can be automatically turned on in the TeX modes
;; by adding the equivalent of `turn-on-tex-magic-space-mode' to the
;; hooks defined in the variable `tex-magic-space-mode-hooks-list' using
;; the command `turn-on-tex-magic-space-in-tex-modes'.
;;
;; NEW: There are also defined two fill predicates,
;; `fill-single-letter-word-nobreak-p' and `fill-tex-magic-space-nobreak-p',
;; which after set as value of `fill-nobreak-predicate' variable makes
;; filling (`M-q' aka `fill-paragraph' and `auto-fill-mode') to not break
;; line after single letter words.  The latter predicate uses the same test
;; as TeX Magic Space mode.  Not shown in modeline.

;; See also: http://www.emacswiki.org/cgi-bin/wiki/NonbreakableSpace
;; Documentation and comments: Jakub Narêbski.


;;; Description[pl]:

;; Ten pakiet s³u¿y do dowi±zywania zdefiniowanych wyrazów (domy¶lnie
;; jednoliterowych spójników) do nastêpuj±cych po nich s³ów za pomoc± znaku
;; `~' (tyldy), nie³amliwej spacji TeX-owej.  S³u¿y to temu, aby w
;; dokumentach TeX-owych unikn±æ jednoliterowych spójników na koñcach linii,
;; co jest wymagane przez polskie (i czeskie) regu³y typograficzne.
;;
;; Pakiet ten dostarcza dwu funkcjonalno¶ci.  Pierwsz± z nich jest
;; sprawdzenie (istniej±cego) tekstu i zasugerowanie dodania brakuj±cych
;; tyld.  Jest ona implementowana przez komendê `tex-hard-spaces', za pomoc±
;; `query-replace-regexp'.  Tê sam± (a nawet rozszerzon±) funkcjonalno¶æ
;; znale¼æ mo¿na w pakiecie `tildify' (UWAGA: domy¶lne ustawienia w tym
;; pakiecie s± dostosowane do jêzyka czeskiego).
;;
;; Drug± z funkcjonalno¶ci jest automatyczne wpisywanie tyld po
;; jednoliterowych spójnikach podczas pisania tekstu (w locie).  Jest ona
;; implementowana przez komendê `tex-magic-space', któr± nale¿y podpi±æ do
;; spacji.  Do aktywowania tej funkcjonalno¶ci nale¿y w³±czyæ
;; `tex-magic-space-mode'.  Po za³adowaniu tego pakietu polecenie to jest
;; przypisane do `C-c SPC'.  Tryb (minor mode) TeX Magic Space mo¿na
;; aktualnie w³±czyæ tak¿e z modeline minor mode menu; jest on oznaczany za
;; pomoc± " ~".  Dodatkowe oznaczenie ":Chk" po " ~" informuje, ¿e
;; porady/testy s± aktywne.  Testy mo¿na w³±czyæ za pomoc± polecenia
;; `tex-magic-space-toggle-checking' przypisanego do `C-c C-SPC'.
;;
;; Na razie sprawdzanie czy nale¿y wstawiaæ nie³amliwe spacje po
;; jednoliterowych spójnikach jest w wersji wstêpnej; je¶li chcesz wstawiæ 
;; ` ' tam gdzie mode wstawia `~' u¿yj `C-q SPC' lub wy³±cz tryb na czas
;; edycji fragmentu gdzie nie³amliwe spacje nie s± po¿±dane. 
;;
;; Funkcjonalno¶æ ta mo¿e byæ automatycznie w³±czana w trybach TeX-owych za
;; pomoc± dodania odpowiednika `turn-on-tex-magic-space-mode' do odpowiednich
;; haczyków (zdefiniowanych w zmiennej `tex-magic-space-mode-hooks-list') za
;; pomoc± polecenia (funkcji) `turn-on-tex-magic-space-in-tex-modes'.
;;
;; NOWE: Zosta³y tak¿e zdefiniowane dwie funkcje
;; `fill-single-letter-word-nobreak-p' i `fill-tex-magic-space-nobreak-p',
;; które wstawione jako warto¶æ zmiennej `fill-nobreak-predicate' powoduj±,
;; ¿e Emacs ³ami±c linie (`M-q' czyli `fill-paragraph', oraz
;; `auto-fill-mode') nie zostawia samotnych jednoliterowych wyrazów na koñcu
;; wiersza (sierotek).  Druga z funkcji u¿ywa tego samego testu co  TeX
;; Magic Space mode.  Nie pokazywane automatycznie w modeline.

;; Zobacz tak¿e: http://www.emacswiki.org/cgi-bin/wiki/NonbreakableSpace
;; Dokumentacja i komentarze: Jakub Narêbski.



;;; TODO:
;; * More and better tests checking if use nonbreakable space, testing
;;   e.g. if we are in comment, table, verbatimlike environment.
;; * Guessing if the TeX Magic Space mode should be turned on based on the
;;   contents of the (La)TeX file header (preamble): either separate command
;;   'guess-*' or appropriate style files for AUCTeX: LaTeX packages polski
;;   and babel.
;; * Extend `tex-magic-space' to add tildes also after e.g. 'tys.'
;; * Add `tex-magic-space-checking-why' (a la `texmathp-why'), which would
;;   tell which tests caused magic space to be inactive. 
;; * Make the abbreviations, expansion of which ends in single-letter word,
;;   to have `~' (tilde) instead of ` ' (space) after expanded abbrev. 
;; * Bring back History: section?


;;; TODO[pl]:
;; * Wiecej i lepsze testy sprawdzaj±ce czy u¿ywaæ nie³amliwej spacji, 
;;   np. w komentarzach, tabelach, otoczeniach typu verbatim.
;; * Zgadywanie czy nale¿y w³±czyæ TeX Magic Space mode na podstawie
;;   nag³ówka pliku (La)TeX-owego: albo osobne polecenie 'guess-*',
;;   albo odpowiednie pliki stylu dla AUCTeX-a: pakiety polski i babel.
;; * Rozszerzyæ `tex-magic-space' by dowi±zywa³o tak¿e np. `tys.'.
;; * Dodaæ `tex-magic-space-checking-why' (a la `texmathp-why'), które
;;   bêdzie podawa³o dlaczego magiczna spacja jest nieaktywna.
;; * Sprawiæ by skróty których rozwiniêcie koñczy siê jednoliterowym
;;   spójnikiem mia³y wstawian± `~' zamiast ` ' po rozwiniêciu.
;; * Przywróciæ sekcjê Historia[pl]:?



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; 
;;; Change Log:

;; Version 1.2 (RCS revision 1.2):
;; * Added `tex-toggle-magic-space'.
;; Version 1.3 (RCS revision 1.4):
;; * Regexps in variables and not hardcoded.
;; Version 2.0 (RCS revision 1.6):
;; * New implementation of `tex-magic-space'.
;; Version 2.3 (RCS revision 1.12):
;; * TeX Magic Space minor mode (bound to `C-c SPC')
;; Version 2.4 (RCS revision 1.17):
;; * Added checking if the `tex-magic-space' should be active or not
;;   (e.g. it should be inactive in math mode detected using `texmathp').
;;   It was implemented using advices.
;; Version 2.5 (RCS revision 1.26):
;; * Removed `tex-toggle-magic-space'; use `tex-magic-space-mode' instead.
;; Version 2.6 (RCS revision 1.31):
;; * Checking if `tex-magic-space' should be active was changed from
;;   the around advice(s) to the conditional in main function.
;; Version 2.7 (RCS revision 1.43, update #61):
;; * Mode maked customizable.
;; * Prefer `tildify-buffer' to own version of `tex-hard-spaces'.
;; * Prefer `define-minor-mode' to `add-minor-mode' in GNU Emacs.
;; Version 2.8 (RCS revision 1.46, update #103):
;; * The main test put into `tex-magic-space-p'.
;; * Added `fill-single-letter-word-nobreak-p' and
;;   `fill-tex-magic-space-nobreak-p' to use as value of
;;   `fill-nobreak-predicate' - TeX Magic Space equivalent for plain text.


;;; Change Log[pl]:

;; Wersja 1.2 (RCS revision 1.2):
;; * Dodano `tex-toggle-magic-space'.
;; Wersja 1.3 (RCS revision 1.4):
;; * Wyra¿enia regularne w zmiennych, a nie zapisane wewn±trz funkcji.
;; Wersja 2.0 (RCS revision 1.6):
;; * Nowa implementacja `tex-magic-space'.
;; Wersja 2.3 (RCS revision 1.12):
;; * Pojawi³ siê TeX Magic Space minor mode (przypisany do `C-c SPC').
;; Wersja 2.4 (RCS revision 1.17):
;; * Dodane porady i polecenie do ich w³±czana (przypisane do `C-c @@'), aby
;;   `tex-magic-space' pozostawa³a nieaktywna tam gdzie nie trzeba (np.
;;   w trybie matematycznym wykrywanym za pomoc± `texmathp').
;; Wersja 2.5 (RCS revision 1.26):
;; * Usuniêcie `tex-toggle-magic-space'; u¿yj `tex-magic-space-mode'.
;; Wersja 2.6 (RCS revision 1.31):
;; * Sprawdzania czy `tex-magic-space' powinno byæ nieaktywne zosta³o
;;   przepisane za pomoc± instrukcji warunkowej w g³ównej funkcji zamiast
;;   u¿ywania do tego porad (advice).
;; Wersja 2.7 (RCS revision 1.43, update #61):
;; * Parametry mode (trybu) ustalalne za pomoc± `customize'.
;; * Preferuj `tildify-buffer' zamiast w³asnej wersji `tex-hard-spaces'.
;; * Preferuj `define-minor-mode' zamiast `add-minor-mode' w GNU Emacs.
;; Wersja 2.8 (RCS revision 1.46, update #103):
;; * Test na sierotki wydzielony do `tex-magic-space-p'.
;; * Dodano funkcje `fill-single-letter-word-nobreak-p' 
;;   i `fill-tex-magic-space-nobreak-p' do u¿ycia jako warto¶æ zmiennej 
;;   `fill-nobreak-predicate' - równowa¿nik TeX Magic Space dla tekstu.



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; 
;;; Code:

(defgroup sierotki nil
  "Support for non-breakable spaces after short (single-letter) words."
  :tag "Tex Magic Space"
  :group 'tex)

(require 'cl) 			; to use `some' in `tex-magic-space'

;;;; ======================================================================
;;;; Add non-breakable spaces in existing document, interactively.
;;;; Usuwanie sierotek w istniej±cym dokumencie, interaktywne.

;;; Hard spaces by Ryszard Kubiak <rysiek@@ipipan.gda.pl>
;;; Modified by Jakub Narêbski <jnareb@@fuw.edu.pl>

;; Zastêpuje znaki odstêpu przez znaki tyldy `~', czyli TeX-ow± nie³amliw±
;; spacjê, po jednoliterowych [polskich] spójnikach w ca³ym buforze.
;; Poni¿sza zmienna definiuje wyra¿enie regularne u¿ywane w `tex-hard-spaces'
(if (fboundp 'tildify-buffer)
    ;; use better tildify.el solution
    ;; u¿yj rozwi±zania z tildify.el
    (progn
      (message "tex-hard-spaces aliased to tildify-buffer")
      (defalias 'tex-hard-spaces 'tildify-buffer))

  (defcustom tex-hard-spaces-regexp "\\<\\([aeiouwzAEIOUWZ]\\)\\s +"
    "*Regular expression which detects single [aeiouwz] for `tex-hard-spaces'.
The part of regular expression which matches string to be saved
should be in parentheses, so the replace part \\\\1~ will work.

Used as first argument to `query-replace-regexp'."
    :type '(regexp)
    :group 'sierotki)
  
  ;; Zwyk³e `query-replace-regexp', czyli C-M-% dla odpowiedniego
  ;; wyra¿enia regularnego, zapisanego w `tex-hard-spaces-regexp'
  (defun tex-hard-spaces ()
    "Replace whitespace characters after single-letter word with `~'.
Replaces whitespace characters following single-letter conjunctions by `~',
the TeX non-breakable space in whole buffer, interactively.
Uses `tex-hard-spaces-regexp' for single-letter conjunctions detection.

It can be used to bind single-letter conjunction to the word following it in
the existing text, using `~' (the TeX non-breakable space), so there are no
single-letter conjunctions at the end of the line (known as 'orphans').

For on-the-fly 'tildification' turn on TeX Magic Space minor mode using
command \\[tex-magic-space-mode].

It is implemented using `query-replace-regexp'."
    (interactive)
    (query-replace-regexp tex-hard-spaces-regexp
			  "\\1~"))
  ) ;; end (if (fboundp 'tildify-buffer) ...)


;;;; ======================================================================
;;;; On-the-fly inserting of non-breakable spaces.
;;;; Zapobieganie powstawaniu sierotek 'w locie'

;;; Magic space by Michal Jankowski <michalj@@fuw.edu.pl>
;;; Modified by Jakub Narêbski <jnareb@@fuw.edu.pl>

;;; ----------------------------------------------------------------------
;;; Tests for `tex-magic-space'
;;; Testy dla `tex-magic-space'

;; Didn't work in XEmacs
;; Nie dzia³a³ w XEmacs
(defun texinverbp ()
  "Determine if point is inside LaTeX \\verb command.
Returns nil or the pair (POINT-VERB-BEG . POINT-VERB-END) of positions where
\\verb argument begins and ends or the position POINT-VERB-BEG where \\verb
command argument begins if \\verb is unfinished (has no closing delimiter).

This command uses the fact that the argument to \\verb cannot contain end of
line characters.  Does not work with nested \\verbs."
  (interactive)
  (let ((point (point))
	beg end	delim)
  (save-excursion
    (and (setq beg (and (re-search-backward "\\\\verb\\*?\\([^a-zA-Z*\\n]\\)"
					   (point-at-bol) t)
		       (match-end 0)))
	 (setq delim (regexp-quote (match-string 1)))
	 (goto-char beg)
	 ;;(or (insert "!") t)
	 (setq end (and (skip-chars-forward (concat "^" delim)
					    (point-at-eol))
			(point)))
	 (or (eolp)
	     (looking-at (concat "[" delim "]")))
	 ;;(or (insert "!") t)
	 (cond ((>= point end) nil)
	       ((eolp) beg)
	       (t (cons beg end)))))))


;;; ......................................................................
;;; Turning on tests for tex-magic-space
;;; Aktywacja sprawdzania/testów dla tex-magic-space i podobne
(defcustom tex-magic-space-do-checking nil
  "*Non-nil if `tex-magic-space' should check `tex-magic-space-tests'.
Set it to non-nil value if you want TeX Magic Space mode to check
if it should add extra checking in addition to testing if we are
after single-letter word (as defined by `tex-magic-space-regexp').
For example such tests (as defined in `tex-magic-space-tests') could
check if we are in restricted horizontal mode, like math mode.

Set also by `tex-magic-space-toggle-checking'"
    :type '(boolean)
    :group 'sierotki)

(defcustom tex-magic-space-tests
  (list
   (unless (and (boundp 'running-xemacs) running-xemacs) 'texinverbp)
   (if (or (featurep 'tex-site) (fboundp 'texmathp)) 'texmathp))
  "List of test functions for `tex-magic-space'.

List of functions which are invoked, in order, to determine whether
`tex-magic-space' could insert a ~ (i.e., a tex non-breakable
space).  The tilde can be inserted only when every function returns
a nil value.  The tests are run only when `tex-magic-space-do-checking'
has non-nil value"
  :type '(repeat function)
  :group 'sierotki)


;;; ----------------------------------------------------------------------
;;; On-the-fly tildes insertion
;;; Wstawianie tyld w locie

;; UWAGA: [czasami] polskie literki s± traktowane jako koniec s³owa dla 8bit
;;        tzn. przy u¿yciu `standard-display-european' do ich wprowadzania.
;;        Bêdê próbowaæ znale¼æ dok³adne warunki wyst±pienia b³êdu.
(defcustom tex-magic-space-regexp "\\<[aeiouwzAEIOUWZ]\\'"
  "*Regular expression which detects single [aeiouwz] for `tex-magic-space'.
`tex-magic-space' inserts `~' if this expression matches two characters before
point, otherwise it inserts the key it is bound to (\\[tex-magic-space]),
usually SPC.

This regular expression should end with [aeiouwzAEIOUWZ]\\\\' to match possible
single letter conjunction against the letter directly before the point.  The
part before [aeiouwzAEIOUWZ] should match word beginning/boundary.

ATTENTION: sometimes in unibyte mode the non US-ASCII letters are considered
word boundary, even when they are word constituents."
  :type '(regexp)
  :group 'sierotki)

;; !!! Expand docstring !!!
;; !!! Docstring do poprawienia !!!
(defun tex-magic-space-p ()
  "Returns true if there should be inserted nonbreakable space."
  (string-match tex-magic-space-regexp 
	   (buffer-substring (max (point-min) (- (point) 2)) (point))))

(defun tex-magic-space (&optional prefix)
  "Magic-space - insert non-breakable space after a single-letter word.
Interactively, PREFIX is the prefix arg (default 1).
Uses `tex-magic-space-regexp' for single-letter words detection.

Works well with auto filling unless `~' is in the table `auto-fill-chars',
in which case `~' is inserted but might be followed by line break.
Works with abbrev expansion with the following exceptions:
 - doesn't do abbrev expansion if abbrev is single letter word
   and `~' is word constituent (according to current syntax table)
 - abbrevs ending with single-letter word will have `~' instead of space
   after the expansion
 - abbrevs with expansion ending with single-letter word won't have
   the SPC following single-letter word substituted with `~'

Should not be used directly.

To use it turn on TeX Magic Space minor mode using command
`tex-magic-space-mode' (\\[tex-magic-space-mode]).

See also: `tex-hard-spaces'"
  (interactive "p")
  (unless (and tex-magic-space-do-checking 
	       (some (lambda (f) (and (functionp f) (funcall f))) 
		     tex-magic-space-tests))
    (when (tex-magic-space-p) 
      (setq last-command-char ?~))) 
  (self-insert-command (or prefix 1)))

(defun debug-tex-magic-space (&optional prefix)
  "Version of `tex-magic-space' which doesn't do any testing."
  (interactive "p")
  (let ((tex-magic-space-do-checking nil))
    (tex-magic-space prefix)))

;;; ----------------------------------------------------------------------
;;; The TeX Magic Space mode equivalent for filling (word wrap)
;;; Równowa¿nik TeX Magic Space mode dla automatycznego zawijania linii

;;; see: http://www.emacswiki.org/cgi-bin/wiki/FillParagraph
;; It is simplified `fill-french-nobreak-p' from textmodes/fill.el.
;; The function `fill-french-nobreak-p' first appeared in textmodex/fill.el
;; rev. 1.132, and the single-letter detection code first appeared in
;; rev. 1.132, correct in 1.181.  Not present in GNU Emacs 21.3
(defun fill-single-letter-word-nobreak-p ()
  "Don't break a line after single letter word.
This is used in `fill-nobreak-predicate' to prevent breaking lines just
after a single letter word."
  (save-excursion
    (skip-chars-backward " \t")
    (unless (bolp)
      (backward-char 1)
      ;; Don't cut right after a single-letter word.
      (and (memq (preceding-char) '(?\t ?\ ))
	   (eq (char-syntax (following-char)) ?w)))))

(defun fill-tex-magic-space-nobreak-p ()
  "Don't break a line after where `tex-magic-space' would insert `~'.

Don't break a line after place where function `tex-magic-space' (or, to be
more exact `tex-magic-space-p' test) would insert non-breakable space,
i.e. tilde ('~').
 
This is used in `fill-nobreak-predicate'."
  (save-excursion
    (skip-chars-backward " \t")
    (unless (bolp)
      (backward-char 1)
      (tex-magic-space-p))))

;; `fill-region-as-paragraph' used by `fill-paragraph', and
;; `do-auto-fill' used by `auto-fill-mode' uses this predicate.
;(setq fill-nobreak-predicate 'fill-single-letter-word-nobreak-p)

;;; ----------------------------------------------------------------------
;;; The TeX Magic Space mode definition and initialization
;;; Definicja trybu TeX Magic Space i jego inicjalizacja

;;; this can be done via defcustom, a la:
;;     (defcustom show-paren-mode nil
;;       "Toggle Show Paren mode..."
;;       :set (lambda (symbol value)
;;              (show-paren-mode (or value 0)))
;;       :initialize 'custom-initialize-default
;;       :type 'boolean
;;       :group 'paren-showing
;;       :require 'paren)

(defvar tex-magic-space-mode nil
  "*Determines if TeX Magic Space mode is active.
You can set it directly or use the command `tex-magic-space-mode'.")
(make-variable-buffer-local 'tex-magic-space-mode)

;; Internal tex-magic-space-mode +/- checking designation string for mode line.
(defvar tex-magic-space-mode-string " ~")
(make-variable-buffer-local 'tex-magic-space-mode-string)

(defvar tex-magic-space-mode-map
  (let ((map (make-sparse-keymap)))
    (define-key map " " 'tex-magic-space)
    (if (and (boundp 'running-xemacs) running-xemacs)
	(define-key map [(control c) (control space)] 'tex-magic-space-toggle-checking)
      (define-key map [?\C-c ?\C- ] 'tex-magic-space-toggle-checking))
    map)
  "Keymap for TeX Magic Space mode.")


;;;###autoload
(defun turn-on-tex-magic-space-mode ()
  "Turn on TeX Magic Space mode.
Does not force the modeline update."
  (setq tex-magic-space-mode t))

;;;###autoload
(defun tex-magic-space-mode (&optional arg)
  "Toggle TeX Magic Space mode.
With ARG, turn TeX Magic Space mode on if and only if ARG is positive.
In TeX Magic Space mode typing a space inserts tilde, the TeX non-breakable
space, after single-letter prepositions described by `tex-magic-space-regexp'
if we are not in one of situations described by `tex-magic-space-tests'.
The testing can be toggled using `\\[tex-magic-space-toggle-checking]' which
runs `tex-magic-space-toggle-checking'.
 
\\<tex-magic-space-mode-map>"
  (interactive "P")
  (setq tex-magic-space-mode
	(if (null arg) (not tex-magic-space-mode)
	  (> (prefix-numeric-value arg) 0)))
  (force-mode-line-update))

(defun tex-magic-space-toggle-checking (&optional arg)
  "Toggle whether `tex-magic-space' check `tex-magic-space-tests'.
With prefix argument ARG, activate checking if ARG is positive,
otherwise deactivate it.

Sets `tex-magic-space-do-checking'."
  (interactive "P")
  (setq tex-magic-space-do-checking
	(if (null arg) (not tex-magic-space-do-checking)
	  (> (prefix-numeric-value arg) 0)))
  (if tex-magic-space-do-checking
      (setq tex-magic-space-mode-string " ~:Chk")
    (setq tex-magic-space-mode-string " ~"))
  (if tex-magic-space-mode
      (force-mode-line-update)
    (message "Checking tests for tex-magic-space %sctivated."
	     (if tex-magic-space-do-checking "a" "dea"))))


(defun use-add-minor-mode ()
  "Use `add-minor-mode' to create minor mode `tex-magic-space-mode'.
In XEmacs `add-minor-mode' is compiled Lisp function, in GNU Emacs 
it is an XEmacs-compatibility functio in `subr'."
  (message "Define tex-magic-space-mode using add-minor-mode") ; DEBUG!
  (put 'tex-magic-space-mode :included '(memq major-mode '(latex-mode
							   tex-mode)))
  (put 'tex-magic-space-mode :menu-tag "TeX Magic Space")
  (add-minor-mode 'tex-magic-space-mode
		  tex-magic-space-mode-string
		  tex-magic-space-mode-map))

(defun use-define-minor-mode ()
  "Use `define-minor-mode' to create minor mode `tex-magic-space-mode'.
The `define-minor-mode' function is defined in `easy-mmode'."
  (message "Define tex-magic-space-mode using define-minor-mode") ; DEBUG!
  (define-minor-mode tex-magic-space-mode
    "Toggle TeX Magic Space mode.
With no argument, this command toggles the mode.
Non-null prefix argument turns on the mode.
Null prefix argument turns off the mode.

In TeX Magic Space mode typing a space inserts tilde, the TeX non-breakable
space, after single-letter prepositions described by `tex-magic-space-regexp'
if we are not in one of situations described by `tex-magic-space-tests'.
The testing can be toggled using `\\[tex-magic-space-toggle-checking]' which
runs `tex-magic-space-toggle-checking'.
 
\\<tex-magic-space-mode-map>"
    (memq major-mode '(latex-mode tex-mode)) ; INIT-VALUE
    tex-magic-space-mode-string
    tex-magic-space-mode-map
    ;; BODY
    (define-key mode-line-mode-menu [tex-magic-space-mode]
      `(menu-item ,(purecopy "TeX Magic Space") tex-magic-space-mode
		  :visible (memq ,major-mode (latex-mode tex-mode))
		  :button (:toggle . tex-magic-space-mode)))
    :group 'sierotki))
    
(defun use-own-code-to-define-mode ()
  "Define minor mode `tex-magic-space-mode' \"by hand\"."
  (message "Define tex-magic-space-mode using own code") ; DEBUG!
  (unless (assq 'tex-magic-space-mode minor-mode-alist)
    (setq minor-mode-alist
	  (cons '(tex-magic-space-mode (" ~" (tex-magic-space-do-checking ":Chk")))
		;; (propertize " ~"
		;;	       'local-map mode-line-minor-mode-keymap
		;;	       'help-echo "mouse-3: minor mode menu")
		minor-mode-alist)))
  (unless (assq 'tex-magic-space-mode-map minor-mode-map-alist)
    (setq minor-mode-map-alist
	  (cons (cons 'tex-magic-space-mode tex-magic-space-mode-map)
		minor-mode-map-alist)))
  (define-key mode-line-mode-menu [tex-magic-space-mode]
    `(menu-item ,(purecopy "TeX Magic Space") tex-magic-space-mode
		:visible (memq ,major-mode (latex-mode tex-mode))
		:button (:toggle . tex-magic-space-mode))))


;; Define minor mode `tex-magic-space-mode'
;; Zdefiniuj `tex-magic-space-mode' 
(if (and (boundp 'running-xemacs) running-xemacs)
    (cond 				; XEmacs
     ((fboundp 'add-minor-mode) (use-add-minor-mode))
     ((fboundp 'define-minor-mode) (use-define-minor-mode))
     (t	(use-own-code-to-define-mode)))
  ;;
  (cond 				; GNU Emacs
   ((fboundp 'define-minor-mode) (use-define-minor-mode))
   ((fboundp 'add-minor-mode) (use-add-minor-mode))
   (t (use-own-code-to-define-mode))))


;;;; ======================================================================
;;; Initialization by Jakub Narêbski <jnareb@@fuw.edu.pl>
;;; and Adam Przepiórkowski <adamp_at@@at_ipipan.waw.pl>
;;; Inicjalizacja dla zapobiegania powstawaniu sierotek 'w locie'

;; Set globally `C-c SPC' to `tex-magic-space-mode'
;; Przypisz globalnie `tex-magic-space-mode' do `C-c SPC'
(define-key mode-specific-map " " 'tex-magic-space-mode)

;; Turn on TeX Magic Space mode for known (La)TeX modes
;; W³±cz TeX Magic Space mode dla znanych trybów (La)TeX-owych
(defmacro tex-magic-space-mode-add-to-hook (hook)
  "Add `turn-on-tex-magic-space-mode' to HOOK."
  `(add-hook ,hook 'turn-on-tex-magic-space-mode))

(defmacro tex-magic-space-mode-initialize (hooks)
  "Add `turn-on-tex-magic-space-mode' to each of HOOKS."
  `(dolist (hook ,hooks)
     (tex-magic-space-mode-add-to-hook hook)))

(defvar tex-magic-space-mode-hooks-list
  '(TeX-mode-hook LaTeX-mode-hook 	; for AUCTeX
    tex-mode-hook			; for tex-mode
    reftex-mode-hook			; for RefTeX minor mode
    bibtex-mode-hook)			; for BibTeX
  "List of hooks to which add turning on TeX Magic Space minor mode.")

(defun turn-on-tex-magic-space-in-tex-modes ()
  "Turn on TeX Magic Space mode automatically in TeX modes.
Adds `turn-on-tex-magic-space-mode' to the hooks listed in the
variable `tex-magic-space-mode-hooks-list'."
  (tex-magic-space-mode-initialize tex-magic-space-mode-hooks-list))


;;;; ======================================================================
;;;; Announce
;;;; Zakoñczenie

(provide 'sierotki)

;; Local variables:
;; coding: iso-latin-2
;; End:

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; sierotki.el ends here
@


1.46
log
@(tex-magic-space): U¿ywa tex-magic-space-p.

Poprawiono TODO i ChangeLog.
@
text
@d11 1
a11 1
;; Last-Updated: Sun Jan 29 16:33:39 2006 (3600 CET)
d13 1
a13 1
;;     Update #: 102
d15 3
a17 3
;; Version:     2.8
;; RCS Version:	$Revision: 1.45 $
;; RCS Date:    $Date: 2006/01/29 15:26:49 $
d26 1
a26 1
;; $Id: sierotki.el,v 1.45 2006/01/29 15:26:49 jnareb Exp jnareb $
d74 8
d107 9
d125 1
a125 1
;; the Polish and Czech ortography/typography rules.
d158 7
d205 8
d245 1
a245 1
;; * Przywróciæ Historia[pl]:?
d566 4
d613 3
d631 1
a631 1
		  (list " ~" '(tex-magic-space-do-checking ":Chk"))
d652 1
a652 1
    (list " ~" '(tex-magic-space-do-checking ":Chk"))
@


1.45
log
@Zamiana kolejno¶ci linków w URL: czê¶ciej uaktualniany wcze¶niej.

Rozwi±zany problem osieroconych pojedynczych literek na koñcu linii po
wykonaniu `fill-paragraph' lub w `auto-fill-mode' (tzn. w trybie
tekstowym, bez specjalnego polecenia dla nie³amliwej spacji):
- wydzielony (g³ówny) test czy wstawiaæ nie³amliw± spacjê,
- dodane predykaty fill-single-letter-word-nobreak-p
  i fill-tex-magic-space-nobreak-p, do ustawienia jako warto¶æ
  fill-nobreak-predicate,
- na razie nie jest ustawiany fill-nobreak-predicate.

(tex-magic-space-p): Dodany.

(fill-single-letter-word-nobreak-p, fill-tex-magic-space-nobreak-p):
Dodane.
@
text
@d11 1
a11 1
;; Last-Updated: Sun Jan 29 16:25:32 2006 (3600 CET)
d13 1
a13 1
;;     Update #: 101
d15 3
a17 3
;; Version:     2.7.2
;; RCS Version:	$Revision: 1.44 $
;; RCS Date:    $Date: 2006/01/22 13:17:15 $
d26 1
a26 1
;; $Id: sierotki.el,v 1.44 2006/01/22 13:17:15 jnareb Exp jnareb $
a199 3
;; * Do not leave solitary single letters at the end of the line in text
;;   modes (without command for nonbreakable space), in `fill-paragraph'
;;   and `auto-fill-mode'. Request by Marek Twardochlib <marekt@@gmx.net>
d214 1
a214 4
;; * Rozwi±zaæ problem osieroconych pojedynczych literek na koñcu linii
;;   po wykonaniu `fill-paragraph' (tzn. w trybie tekstowym, bez specjalnego
;;   polecenia dla nie³amlowej spacji). Hack do `fill-paragraph' i/lub
;;   `auto-fill-mode' lub properties. Marek Twardochlib <marekt@@gmx.net>
d242 5
d269 1
a269 1
;; Version 2.7 (RCS revision 1.43, update #61):
d273 5
d463 2
a464 2
  (unless (and tex-magic-space-do-checking
	       (some (lambda (f) (and (functionp f) (funcall f)))
d466 1
a466 2
    (when (string-match tex-magic-space-regexp 
	   (buffer-substring (max (point-min) (- (point) 2)) (point)))
@


1.44
log
@Rozszerzenie copyright do 2006.

Rozszerzone komentarze Description, dodana sekcja TO DO, link do
http://www.emacswiki.org/cgi-bin/wiki/NonbreakableSpace
@
text
@d11 1
a11 1
;; Last-Updated: Sun Jan 22 14:15:18 2006 (3600 CET)
d13 1
a13 1
;;     Update #: 81
d16 2
a17 2
;; RCS Version:	$Revision: 1.43 $
;; RCS Date:    $Date: 2006/01/21 11:51:06 $
d19 2
a20 2
;; URL: http://www.fuw.edu.pl/~jnareb/sierotki.el
;;      http://www.emacswiki.org/emacs/sierotki.el
d26 1
a26 1
;; $Id: sierotki.el,v 1.43 2006/01/21 11:51:06 jnareb Exp jnareb $
d187 1
a187 1
;;; TO DO:
d200 3
d205 1
a205 1
;;; TO DO[pl]:
d217 4
a220 1

d430 7
d473 38
@


1.43
log
@Inny wygl±d nag³ówka. Dodano wymaganie (require) cl.

Uczyniono parametry TeX Magic Space mode zmienialne za pomoc±
`customize': dodano defgroup sierotki, czê¶æ defvar zmieniono na
defcustom.

Je¶li tildify.el jest dostêpne (dok³adniej, je¶li `tildify-buffer'
jest dostêpne) to u¿ywamy zamiast w³asnego prymitywnego rozwi±zania
`tex-hard-spaces' bardziej zaawansowane `tildify-buffer'.
TYMCZASOWE: `tex-hard-spaces' aliasowane do `tildify-buffer'.

(tex-magic-space-do-checking): rozszerzony docstring.

Zdefiniowano funkcje use-add-minor-mode, use-define-minor-mode (NOWE!),
use-own-code-to-define-mode. Dla GNU Emacs preferuj
`define-minor-mode' zamiast `add-minor-mode', dla XEmacs
odwrotnie. Gdy siê nie uda, u¿yj w³asnego kodu. DEBUG!.

Usuniêto czê¶æ komentarzy (w tym NOTES). Drobne zmiany w stylu.
@
text
@d3 1
a3 1
;; Copyright (C) 1999-2005  Micha³ Jankowski, Jakub Narêbski
d11 1
a11 1
;; Last-Updated: Sat Jan 21 12:49:02 2006 (3600 CET)
d13 1
a13 1
;;     Update #: 78
d15 3
a17 3
;; Version:     2.7.1
;; RCS Version:	$Revision: 1.42 $
;; RCS Date:    $Date: 2005/11/28 23:32:24 $
d26 1
a26 1
;; $Id: sierotki.el,v 1.42 2005/11/28 23:32:24 jnareb Exp jnareb $
d75 1
d101 1
d123 13
a135 4
;; you have to turn on `tex-magic-space-mode'.  The minor mode TeX Magic
;; Space can be turned on from the modeline minor mode menu.  This mode
;; is denoted by " ~" in the modeline.  The ":Chk" after " ~" in the modeline
;; shows that test are enabled.
d142 1
d145 1
d165 11
a175 4
;; `tex-magic-space-mode'.  Tryb (minor mode) TeX Magic Space mo¿na aktualnie
;; w³±czyæ tak¿e z modeline minor mode menu; jest on oznaczany za pomoc± " ~".
;; Ewentualne dodatkowe oznaczenia po " ~" informuj±, ¿e porady/testy s±
;; aktywne.
d182 1
d185 32
d243 1
d270 1
@


1.42
log
@Przerobiony nag³ówek.

Usuniêta sekcja To do:
@
text
@d5 3
a7 3
;; Authors: Ryszard Kubiak <rysiek@@ipipan.gda.pl>
;;	Micha³ Jankowski <michalj@@fuw.edu.pl>
;;	Jakub Narêbski <jnareb@@fuw.edu.pl>
d9 1
a9 1
;; Created: 3 Nov 1999
d11 1
a11 1
;; Last-Updated: Tue Nov 29 00:31:08 2005 (3600 CET)
d13 1
a13 1
;;     Update #: 11
d15 4
a18 5
;; Version: 2.6.7
;; RCS Id: $Id: $
;; RCS Version:	$Revision: 1.41 $
;; RCS Date: $Date: 2005/11/03 22:26:53 $
;; Keywords: TeX, wp, convenience
a23 1
;; Incompatibility:
d25 2
a26 1
;; $Id: sierotki.el,v 1.41 2005/11/03 22:26:53 jnareb Exp jnareb $
a166 3
;; 4-Nov-2005    Jakub Narebski  
;;    Last-Updated: Thu Nov  3 23:47:10 2005 #6 (Jakub Narebski)
;;    
d185 4
d205 1
a205 1
;; * Usuniêcie `tex-toggle-magic-space'; u¿yj `tex-magic-space-mode'. 
d210 4
d220 6
d237 9
a245 2
(defvar tex-hard-spaces-regexp "\\<\\([aeiouwzAEIOUWZ]\\)\\s +"
  "*Regular expression which detects single [aeiouwz] for `tex-hard-spaces'.
d249 8
a256 6
Used as first argument to `query-replace-regexp'.")

;; Zwyk³e `query-replace-regexp', czyli C-M-% dla odpowiedniego
;; wyra¿enia regularnego, zapisanego w `tex-hard-spaces-regexp'
(defun tex-hard-spaces ()
  "Replace whitespace characters after single-letter word with `~'.
d269 4
a272 3
 (interactive)
 (query-replace-regexp tex-hard-spaces-regexp
                       "\\1~"))
a281 1

d286 2
a287 4
;; Workaround for XEmacs (not needed anymore?)
;(unless (fboundp 'match-string-no-properties)
;  (defalias 'match-string-no-properties 'match-string))

d298 1
a298 3
	beg
	end
	delim)
d316 1
d320 11
a330 4
(defvar tex-magic-space-do-checking nil
  "*Non-nil if `tex-magic-space' checks `tex-magic-space-tests'.

Set by `tex-magic-space-toggle-checking'")
d332 1
a332 1
(defvar tex-magic-space-tests
d342 3
a344 1
has non-nil value")
d353 2
a354 2
;;        Bêdê próbowac znale¼æ dok³adne warunki wyst±pienia b³edu.
(defvar tex-magic-space-regexp "\\<[aeiouwzAEIOUWZ]\\'"
d365 3
a367 2
word boundary, even when they are word constituents.")

d390 1
a390 2
  (interactive "p")	               ; Prefix arg jako liczba.  Nie robi I/O.
  ;; Tests
d392 1
a392 1
	       (some (lambda (f) (and (fboundp f) (funcall f)))
d394 1
a394 3
    ;; tests failed
    (when (string-match
	   tex-magic-space-regexp      ; wyra¿enie rozpoznaj±ce samotne spójniki
d396 2
a397 2
      (setq last-command-char ?~)))    ; wstawiamy `~' zamiast SPC
  (self-insert-command (or prefix 1))) ; daje obs³ugê auto-fill, abbrev, blinkin-paren
d400 1
a400 1
  "Version of `tex-magic-space' which does'n do any testing."
d408 1
a408 1
;;; Definicja trybu i inicjalizacja
d410 9
d434 1
a455 6
  ;; alternative, less clear and slower
;;;  (setq tex-magic-space-mode
;;;	(not (or (and (null arg) tex-magic-space-mode)
;;;		 (<= (prefix-numeric-value arg) 0))))
  ;; uaktualnij modeline
  ;; IDEA: mo¿na by dodaæ informowanie o w(y)³±czeniu tego trybu
a457 1

d459 1
a459 1
  "Toggle whether `tex-magic-space' checks `tex-magic-space-tests'.
d474 42
a515 56
;;; NOTES:
;;; * "Hide ifdef" mode z hideif.el u¿ywa "pseudotrybu" `hide-ifdef-hiding' do
;;;   wy¶wietlania opcjonalnego " Hiding", tzn. dodaje do `minor-mode-alist'
;;;   (hide-ifdef-hiding . " Hiding") oprócz (hide-ifdef-mode . " Ifdef").
;;; * "CC Mode" analogicznie, dodaje (c-auto-hungry-string
;;;   . c-auto-hungry-string), gdzie c-auto-hungry-string to odpowiednio "/ah"
;;;   lub analogiczne; automagicznie siê zmienia.
;;; * elementami `minor-mode-alist' powinny byæ pary (VARIABLE STRING), gdzie
;;;   STRING to mo¿e byæ (patrz `mode-line-format'):
;;;   - STRING, u¿yty jak jest, z wykorzystaniem %-sth
;;;   - SYMBOL, u¿yta jest jego warto¶æ (je¶li ró¿na od t lub nil); %-sth
;;;     nie s± rozpoznawane gdy warto¶ci± jest string
;;;   - (:eval FORM), FORM jest obliczana i umieszczany wynik (Emacs 21)
;;;   - (STRING REST...), (LIST REST...), oblicz rekurencyjnie i po³±cz wyniki
;;;   - (SYMBOL THEN ELSE) lub (SYMBOL THEN), np. u¿ycie `minor-mode-alist'
;;;   - (WIDTH REST...), dope³nione WIDTH spacjami je¶li WIDTH > 0, skrócony
;;;     do -WIDTH kolumn je¶li WIDTH < 0; przyk³ad: (-3 "%p"), procent pliku
;;; * wiêkszo¶æ trybów "rêcznie" dodaje siê do modeline...

;;; 'Zarejestrowanie' trybu; na podstawie kodu z reftex.el
(if (fboundp 'add-minor-mode)
    ;; Je¶li dostêpna jest funkcja `add-minor-mode' (w FSF Emacs jest to funkcja
    ;; kompatybilno¶ci z XEmacsem, zdefiniowana w `subr'), to u¿yj jej aby
    ;; uzyskaæ ekstra funkcjonalno¶æ, tzn. wpis do minor mode menu w modeline.
    (progn
      ;; W³asno¶æ (property) :included ustala, czy dany trub jest widoczny w
      ;; minor mode menu w modeline.  Teoretycznie podana warto¶æ powinna
      ;; spowodowaæ wpisanie do menu tylko dla podanych trybów; w FSF Emacs 21.2-7
      ;; jednak¿e w³asno¶æ ta jest sprawdzana tylko przy wykonywaniu
      ;; `add-minor-mode'; w XEmacs 21.4.6-7 nie jest w ogóle sprawdzana
      (put 'tex-magic-space-mode :included '(memq major-mode '(latex-mode
							       tex-mode)))
      ;; W³asno¶æ (property) :menu-tag podaje tekst pojawiaj±cy siê w minor mode
      ;; menu w modeline; w XEmacs 21.4.6-7 nie daje ¿adnego efektu, w minor
      ;; mode menu s± wszystkie minor mode, ten tryb jako "tex-magic-space-mode"
      ;; IDEA: mo¿na by dodaæ do 'tex-magic-space-mode w³asno¶æ
      ;; `menu-enable'; i tak (nie wiem dlaczego) nie dzia³a; mo¿e FORM nie eval?
;;;   (put 'tex-magic-space-mode 'menu-enable '(memq major-mode '(latex-mode
;;;						                  tex-mode)))
      ;; je¶li `add-minor-mode' u¿ywa `menu-item' to u¿yæ w³asno¶ci :visible
      ;; FORM lub :included FORM, :key-sequence KEY (aby przyspieszyæ ³adowanie)
      ;; NOTE: `add-minor-mode' u¿ywa (define-key mode-line-menu... :button ...)
      (put 'tex-magic-space-mode :menu-tag "TeX Magic Space")
      ;; IDEA: tutaj mo¿na by dodaæ za pomoc± funkcji `propertize' dodatkowe
      ;; w³asno¶ci typu :help-echo, :local-map, :display czy :face
      (add-minor-mode 'tex-magic-space-mode
		      (list " ~" '(tex-magic-space-do-checking ":Chk"))
		      tex-magic-space-mode-map))
  ;; Standardowy sposób dodania minor mode, za "Emacs Lisp Reference Manual"
;;;(define-key mode-line-mode-menu
;;; (vector 'tex-magic-space-mode)
;;; ;; mo¿na by u¿yæ ` do "cytowania" (quote) tylko czê¶ci
;;; (list 'menu-item "TeX Magic Space"
;;;		'tex-magic-space-mode
;;;		:visible '(memq major-mode '(latex-mode tex-mode))
;;;		:button   (cons :toggle tex-magic-space-mode)))
d526 19
a544 1
		minor-mode-map-alist))))
a547 2
;;;; Inicjalizacja dla zapobiegania powstawaniu sierotek 'w locie'

d550 1
d552 1
a553 4
;; `mode-specific-map' to (globalna) mapa klawiatury dla prefiksu C-c
;; IDEA: `tex-magic-space-toggle-checking' mo¿e byæ w mapie dla TeX Magic
;; Space mode, tzn. w `tex-magic-space-mode-map'; jako prefiksu mo¿na by
;; u¿yæ `C-c C-SPC', a jako klawiszy " ", "m", "f", "u".
a554 17
;(define-key mode-specific-map "@@" 'tex-magic-space-toggle-checking)
;; aby wpisaæ 'C-SPC' trzeba u¿yæ wektora zamiast ³añcucha, t.j. [?\C- ]

;; TO DO: przepisaæ to z powrotem na LaTeX-mode-hook, TeX-mode-hook,
;; reftex-mode-hook i tym podobne.  `define-key' dla odpowiedniej mapy
;; wystarczy zdefiniowaæ raz w chwili gdy mapa jest dostêpna (za pomoc±
;; `eval-after-load') i domy¶lnie w danym trybie we wszystkich buforach
;; `tex-magic-space' bêdzie w³±czone lub nie.  `tex-magic-space-mode' (lub
;; ustawienie zmiennej) jest lokalne dla bufora (i takie powinno pozostaæ),
;; wiêc nale¿y dodaæ je do odpowiednich haków za pomoc± `add-hook' (uwaga:
;; jako argument pobiera on FUNCTION, a nie FORM!).

;; HAKI: reftex-mode-hook, reftex-load-hook (RefTeX), TeX-mode-hook,
;; LaTeX-mode-hook (AUCTeX, nieudokumentowane),
;; TeX-auto-prepare-hook/TeX-auto-cleanup-hook (AUCTeX), bibtex-mode-hook
;; (BibTeX), tex-mode-hook, plain-tex-mode-hook/latex-mode-hook (tex-mode);
;; uruchamia siê tak¿e text-mode-hook (AUCTeX, tex-mode)
d556 1
@


1.41
log
@Copyright rozszerzony do 2005.
@
text
@d2 1
a2 1

d4 19
a22 11

;; Authors: 	Ryszard Kubiak   <rysiek@@ipipan.gda.pl>
;;		Micha³ Jankowski <michalj@@fuw.edu.pl>
;;		Jakub Narêbski   <jnareb@@fuw.edu.pl>
;; Maintainer: 	Jakub Narêbski <jnareb@@fuw.edu.pl>
;; Version: 	2.6.5
;; RCS version:	$Revision: 1.40 $
;; Date: 	$Date: 2005/02/03 03:35:38 $
;; Keywords: 	TeX, wp, convenience
;; Created: 	03-11-1999
;; URL: 	http://www.fuw.edu.pl/~jnareb/sierotki.el
d24 1
a24 1
;; Compatibility:   Emacs21, XEmacs21
d27 1
a27 1
;; $Id: sierotki.el,v 1.40 2005/02/03 03:35:38 jnareb Exp jnareb $
a31 2
;;{{{ GPL

d49 2
a50 2
;;}}}

d165 2
a166 104

;;; Notes:


;;; To do[pl]:

;; TO DO: Ulepszyæ wyra¿enie regularne b±d¼ daæ do wyboru wersjê prost±
;; (i szybk±) lub skomplikowan± (i mog±c± wiêcej).  Byæ mo¿e wyra¿enie
;; regularne powinno byæ "sk³adane" z kilku: definiuj±cego granicê s³owa z
;; lewej strony, definiuj±cego jednoliterowe spójniki, definiuj±cego inne
;; wyrazy po których stawiamy nie³amliw± spacjê, definiuj±cego dowi±zanie z
;; prawej strony t.j. co¶ jak "\\'", definiuj±cego jakie znaki zamieniamy na
;; pojedyncz± nie³amliw± spacjê (granicê s³owa z prawej).
;;
;; TO DO: Osobna porada (domy¶lnie wy³±czona) sprawdzaj±ca czy jeste¶my w
;; komentarzu u¿ywaj±c kodu jak w `comment-beginning', t.j. sprawdzaj±c czy
;; u¿ywamy `font-lock-comment-face' i ewentualnie szukaj±c znaku komentarza
;; `%' w bie¿±cej linii na lewo od bie¿±cej pozycji (`point').
;;
;; TO DO: Zgadywanie, czy nale¿y w³±czyæ TeX Magic Space mode (czy w inny
;; sposób uaktywniæ magiczn± spacjê) na podstawie nag³ówka pliku TeX-owego.
;; Lub napisanie odpowiednich plików dla AUCTeX-a: pakiety polski i babel.
;;
;; TO DO: U¿yæ `defcustom' do zdefiniowania zmiennych (via `customize').
;;
;; TO DO: Dodaæ tex-magic-space-regexp-len zamiast 2 (np. dowi±zywanie 'tys.')
;;        do `tex-magic-space'.
;;
;; TO DO: Dodaæ `tex-magic-space-checking-why' (a la `texmathp-why'), które
;;        bêdzie podawa³o dlaczego magiczna spacja jest nieaktywna.
;;
;; TO DO: Przywróciæ tym razem jako osobn± funkcjê sprawdzanie jak pokolorowany
;; (za pomoc± `font-lock') jest bie¿±cy obszar, i odpowiednio nieaktywowanie
;; g³ównej czê¶ci `tex-magic-space'.
;;
;; TO DO: Napisaæ post-poradê (after advice) do rozwijania skrótów w
;; `abbrev-mode', tak by w przypadku rozwiniêæ koñcz±cych siê na jednoliterowe
;; spójniki dodawana by³a tylda zamiast spacji która wyzwoli³a rozwiniêcie.
;;
;; TO DO: Opis TeX Magic Space mode brany jest z docstring
;; `tex-magic-space-mode'.  Je¶li da siê go wpisaæ gdzie¶ indziej zrobiæ to.
;; Je¶li nie, to rozszerzyæ opis w docstringu `tex-magic-space-mode'.
;;
;; TO DO: Przetestowaæ testy, byæ mo¿e dodaæ sprawdzanie w jakim trybie jeste¶my!
;;
;; TO DO: w `tex-magic-space' zamiast sprawdzania czy element listy
;; nadaje siê do `funcall' za pomoc± `fboundp' owin±æ wszystko w
;; `condition-case' czy co¶ w tym stylu.
;;
;; TO DO: Poprawiæ pierwsz± linijkê dokumentacji do tex-magic-space.
;;
;; Ponadto dokumentacja po angielsku (zw³aszcza docstrings) wymaga poprawienia.
;;
;; Zawarto¶æ "History:" nie jest kompletna.


;;; History:

;; There is no "History:" section in English because all references
;; are in Polish.

;;; History[pl]:

;; Kod `tex-hard-spaces' pojawi³ siê po raz pierwszy w:
;;
;; From: rysiek@@IPIPAN.GDA.PL (Ryszard Kubiak)
;; Newsgroups: pl.comp.dtp.tex.gust
;; Subject: Re: tylda do samotnych
;; Date: 25 Oct 1999 21:12:54 GMT
;;
;; Wpisywanie tyld "w locie", tzn `tex-magic-space' pojawi³o siê w:
;;
;; From: Michal Jankowski <michalj@@fuw.edu.pl>
;; Newsgroups: pl.comp.dtp.tex
;; Subject: Dowiazywanie samotnich literek do nastepnego slowa.
;; Date: 03 Nov 1999 12:45:22 +0100
;;
;; Nastêpnie wyra¿enia regularne w obu funkcjach by³y sukcesywnie
;; poprawiane.  W wyniku do¶wiadczeñ z u¿ywania `tex-magic-space' przy
;; pisaniu tekstów z du¿± ilo¶ci± matematyki zosta³o napisane
;; `tex-toggle-magic-space'.  Nastêpnie zosta³ zg³oszony b³±d w wyra¿eniu
;; regularnym w `tex-magic-space', a w wyniku dyskusji powsta³a obecna
;; wersja `tex-magic-space', u¿ywaj±ca zmiennej `last-command-char'
;; i funkcji `self-insert-command'
;;
;; From: Michal Jankowski <Michal.Jankowski@@fuw.edu.pl>
;; Subject: Re: Test sierotek
;; Date: 30 Oct 2001 13:02:16 +0100
;;
;; W wyniku porównania z inn± implementacj± magicznej spacji (`spacja')
;; z artyku³u "GNU Emacs Lisp" rzyjontka na debian.otwarte.pl
;; http://debian.otwarte.pl/article.php?aid=39
;; (obecnie http://www.debianusers.pl/article.php?aid=36)
;; (w szczególno¶ci innego jej zachowania) powsta³o pytanie o to, jakie
;; w³asno¶ci powinno mieæ `tex-magic-space'
;;
;; From: "Jakub Narêbski" <jnareb@@fuw.edu.pl>
;; Subject: RFC: sierotki.el
;; Newsgroups: pl.comp.dtp.tex
;; Date: 14 Nov 2002 14:13:26 GMT
;;
;; Dyskusja trwa...


d168 3
d211 3
a570 1

d581 1
@


1.40
log
@Powrót do wersji z polskimi kometarzami
@
text
@d3 1
a3 1
;; Copyright (C) 1999-2003  Micha³ Jankowski, Jakub Narêbski
d10 2
a11 2
;; RCS version:	$Revision: 1.37 $
;; Date: 	$Date: 2005/02/03 02:46:11 $
d19 1
a19 1
;; $Id: sierotki.el,v 1.37 2005/02/03 02:46:11 jnareb Exp $
@


1.39
log
@Wersja która zosta³a wys³ana do EmacsWiki, bez polskich liter
http://www.emacswiki.org/elisp/sierotki.el
@
text
@d3 1
a3 1
;; Copyright (C) 1999-2003  Michal Jankowski, Jakub Narebski
d6 6
a11 6
;;		Michal Jankowski <michalj@@fuw.edu.pl>
;;		Jakub Narebski   <jnareb@@fuw.edu.pl>
;; Maintainer: 	Jakub Narebski <jnareb@@fuw.edu.pl>
;; Version: 	2.6.6
;; RCS version:	$Revision: 1.38 $
;; Date: 	$Date: 2005/02/03 02:59:28 $
d19 1
a19 1
;; $Id: sierotki.el,v 1.38 2005/02/03 02:59:28 jnareb Exp jnareb $
d70 24
d110 1
a110 1
;; language, those provided here are for Polish).
d126 135
a260 1
;; Documentation and comments: Jakub Narebski.
d282 21
a302 2
;; Version 2.6.6 (RCS revision 1.38):
;; * Removed Polish comments.
d309 1
d312 1
a312 1
;;; Modified by Jakub Narebski <jnareb@@fuw.edu.pl>
d314 3
d324 2
d347 1
d350 1
a350 1
;;; Modified by Jakub Narebski <jnareb@@fuw.edu.pl>
d355 1
d380 1
a380 1
	 ;;(or (insert "!") t)        ; debug
d386 1
a386 1
	 ;;(or (insert "!") t)        ; debug
d393 1
d414 1
d416 3
d454 1
a454 1
  (interactive "p")
d461 1
a461 1
	   tex-magic-space-regexp
d463 2
a464 2
      (setq last-command-char ?~)))
  (self-insert-command (or prefix 1)))
d475 1
a500 1

d513 6
d538 20
a557 1
;;; 'Registering' the tex-magic-space-mode; based on code from reftex.el
d559 3
d563 5
a567 1
      ;; the following doesn't seem to work like I'd like it to 
d570 10
d581 2
d586 8
d597 3
d608 1
a608 1
;;;; Inicjalization
d610 2
a611 2
;;; Initialization by Jakub Narebski <jnareb@@fuw.edu.pl>
;;; and Adam Przepiorkowski <adamp_at@@at_ipipan.waw.pl>
d613 5
a617 1
;; `C-c SPC' set via `mode-specific-map' keymap
d620 16
d637 1
a637 1
;; Turn on TeX Magic Space mode for known (La)TeX modes
d664 1
d668 5
a672 1
;;; sierotki.el ends here.
@


1.38
log
@Wersja przes³ana do EmacsWiki.
@
text
@d6 1
a6 1
;;		Micha³ Jankowski <michalj@@fuw.edu.pl>
d10 2
a11 2
;; RCS version:	$Revision: 1.37 $
;; Date: 	$Date: 2005/02/03 02:46:11 $
d19 1
a19 1
;; $Id: sierotki.el,v 1.37 2005/02/03 02:46:11 jnareb Exp jnareb $
d124 1
a124 1
;; Version 2.6.6 (RCS revision 1.37):
@


1.37
log
@Drobne zmiany w sekcji "Commentary:" i w docstrings.
@
text
@d3 1
a3 1
;; Copyright (C) 1999-2003  Micha³ Jankowski, Jakub Narêbski
d7 5
a11 5
;;		Jakub Narêbski   <jnareb@@fuw.edu.pl>
;; Maintainer: 	Jakub Narêbski <jnareb@@fuw.edu.pl>
;; Version: 	2.6.5
;; RCS version:	$Revision: 1.36 $
;; Date: 	$Date: 2003/10/24 19:05:13 $
d19 1
a19 1
;; $Id: sierotki.el,v 1.36 2003/10/24 19:05:13 jnareb Exp jnareb $
a69 24
;;; Installation[pl]:

;; Aby u¿yæ tego pakietu, umie¶æ nastêpuj±c± linijkê w swoim pliku .emacs
;;
;;    (require 'sierotki)
;;
;; Je¶li nie chcesz go ³adowaæ zanim nie bêdzie potrzebny, mo¿esz u¿yæ
;; ³adowania na ¿±danie, np. dodaj±c do .emacs nastêpuj±ce linie
;;
;;    (autoload 'tex-magic-space-mode "sierotki"
;;              "TeX Magic Space minor mode" t)
;;    (define-key mode-specific-map " " 'tex-magic-space-mode)
;;
;; Wówczas po wci¶niêciu `C-c SPC' zostanie w³±czony TeX Magic Space mode
;; i zostanie za³adowana reszta funkcji.  Uwaga: przy u¿ywaniu
;; automatycznego ³adowania ten tryb _nie mo¿e_ byæ automatycznie w³±czany
;; w trybach LaTeX-owych.
;;
;; Je¶li chcesz by TeX Magic Space mode by³ automatycznie w³±czany
;; w znanych trybach TeX-owych dodaj nastêpuj±c± linijkê do swojego pliku
;; .emacs po (require 'sierotki)
;;
;;    (turn-on-tex-magic-space-in-tex-modes)

d86 1
a86 1
;; language, those here are for Polish).
d102 1
a102 135
;; Documentation and comments: Jakub Narêbski.

;;; Description[pl]:

;; Ten pakiet s³u¿y do dowi±zywania zdefiniowanych wyrazów (domy¶lnie
;; jednoliterowych spójników) do nastêpuj±cych po nich s³ów za pomoc± znaku
;; `~' (tyldy), nie³amliwej spacji TeX-owej.  S³u¿y to temu, aby w
;; dokumentach TeX-owych unikn±æ jednoliterowych spójników na koñcach linii,
;; co jest wymagane przez polskie (i czeskie) regu³y typograficzne.
;;
;; Pakiet ten dostarcza dwu funkcjonalno¶ci.  Pierwsz± z nich jest
;; sprawdzenie (istniej±cego) tekstu i zasugerowanie dodania brakuj±cych
;; tyld.  Jest ona implementowana przez komendê `tex-hard-spaces', za pomoc±
;; `query-replace-regexp'.  Tê sam± (a nawet rozszerzon±) funkcjonalno¶æ
;; znale¼æ mo¿na w pakiecie `tildify' (UWAGA: domy¶lne ustawienia w tym
;; pakiecie s± dostosowane do jêzyka czeskiego).
;;
;; Drug± z funkcjonalno¶ci jest automatyczne wpisywanie tyld po
;; jednoliterowych spójnikach podczas pisania tekstu (w locie).  Jest ona
;; implementowana przez komendê `tex-magic-space', któr± nale¿y podpi±æ do
;; spacji.  Do aktywowania tej funkcjonalno¶ci nale¿y w³±czyæ
;; `tex-magic-space-mode'.  Tryb (minor mode) TeX Magic Space mo¿na aktualnie
;; w³±czyæ tak¿e z modeline minor mode menu; jest on oznaczany za pomoc± " ~".
;; Ewentualne dodatkowe oznaczenia po " ~" informuj±, ¿e porady/testy s±
;; aktywne.
;;
;; Funkcjonalno¶æ ta mo¿e byæ automatycznie w³±czana w trybach TeX-owych za
;; pomoc± dodania odpowiednika `turn-on-tex-magic-space-mode' do odpowiednich
;; haczyków (zdefiniowanych w zmiennej `tex-magic-space-mode-hooks-list') za
;; pomoc± polecenia (funkcji) `turn-on-tex-magic-space-in-tex-modes'.

;; Dokumentacja i komentarze: Jakub Narêbski.


;;; Notes:


;;; To do[pl]:

;; TO DO: Ulepszyæ wyra¿enie regularne b±d¼ daæ do wyboru wersjê prost±
;; (i szybk±) lub skomplikowan± (i mog±c± wiêcej).  Byæ mo¿e wyra¿enie
;; regularne powinno byæ "sk³adane" z kilku: definiuj±cego granicê s³owa z
;; lewej strony, definiuj±cego jednoliterowe spójniki, definiuj±cego inne
;; wyrazy po których stawiamy nie³amliw± spacjê, definiuj±cego dowi±zanie z
;; prawej strony t.j. co¶ jak "\\'", definiuj±cego jakie znaki zamieniamy na
;; pojedyncz± nie³amliw± spacjê (granicê s³owa z prawej).
;;
;; TO DO: Osobna porada (domy¶lnie wy³±czona) sprawdzaj±ca czy jeste¶my w
;; komentarzu u¿ywaj±c kodu jak w `comment-beginning', t.j. sprawdzaj±c czy
;; u¿ywamy `font-lock-comment-face' i ewentualnie szukaj±c znaku komentarza
;; `%' w bie¿±cej linii na lewo od bie¿±cej pozycji (`point').
;;
;; TO DO: Zgadywanie, czy nale¿y w³±czyæ TeX Magic Space mode (czy w inny
;; sposób uaktywniæ magiczn± spacjê) na podstawie nag³ówka pliku TeX-owego.
;; Lub napisanie odpowiednich plików dla AUCTeX-a: pakiety polski i babel.
;;
;; TO DO: U¿yæ `defcustom' do zdefiniowania zmiennych (via `customize').
;;
;; TO DO: Dodaæ tex-magic-space-regexp-len zamiast 2 (np. dowi±zywanie 'tys.')
;;        do `tex-magic-space'.
;;
;; TO DO: Dodaæ `tex-magic-space-checking-why' (a la `texmathp-why'), które
;;        bêdzie podawa³o dlaczego magiczna spacja jest nieaktywna.
;;
;; TO DO: Przywróciæ tym razem jako osobn± funkcjê sprawdzanie jak pokolorowany
;; (za pomoc± `font-lock') jest bie¿±cy obszar, i odpowiednio nieaktywowanie
;; g³ównej czê¶ci `tex-magic-space'.
;;
;; TO DO: Napisaæ post-poradê (after advice) do rozwijania skrótów w
;; `abbrev-mode', tak by w przypadku rozwiniêæ koñcz±cych siê na jednoliterowe
;; spójniki dodawana by³a tylda zamiast spacji która wyzwoli³a rozwiniêcie.
;;
;; TO DO: Opis TeX Magic Space mode brany jest z docstring
;; `tex-magic-space-mode'.  Je¶li da siê go wpisaæ gdzie¶ indziej zrobiæ to.
;; Je¶li nie, to rozszerzyæ opis w docstringu `tex-magic-space-mode'.
;;
;; TO DO: Przetestowaæ testy, byæ mo¿e dodaæ sprawdzanie w jakim trybie jeste¶my!
;;
;; TO DO: w `tex-magic-space' zamiast sprawdzania czy element listy
;; nadaje siê do `funcall' za pomoc± `fboundp' owin±æ wszystko w
;; `condition-case' czy co¶ w tym stylu.
;;
;; TO DO: Poprawiæ pierwsz± linijkê dokumentacji do tex-magic-space.
;;
;; Ponadto dokumentacja po angielsku (zw³aszcza docstrings) wymaga poprawienia.
;;
;; Zawarto¶æ "History:" nie jest kompletna.


;;; History:

;; There is no "History:" section in English because all references
;; are in Polish.

;;; History[pl]:

;; Kod `tex-hard-spaces' pojawi³ siê po raz pierwszy w:
;;
;; From: rysiek@@IPIPAN.GDA.PL (Ryszard Kubiak)
;; Newsgroups: pl.comp.dtp.tex.gust
;; Subject: Re: tylda do samotnych
;; Date: 25 Oct 1999 21:12:54 GMT
;;
;; Wpisywanie tyld "w locie", tzn `tex-magic-space' pojawi³o siê w:
;;
;; From: Michal Jankowski <michalj@@fuw.edu.pl>
;; Newsgroups: pl.comp.dtp.tex
;; Subject: Dowiazywanie samotnich literek do nastepnego slowa.
;; Date: 03 Nov 1999 12:45:22 +0100
;;
;; Nastêpnie wyra¿enia regularne w obu funkcjach by³y sukcesywnie
;; poprawiane.  W wyniku do¶wiadczeñ z u¿ywania `tex-magic-space' przy
;; pisaniu tekstów z du¿± ilo¶ci± matematyki zosta³o napisane
;; `tex-toggle-magic-space'.  Nastêpnie zosta³ zg³oszony b³±d w wyra¿eniu
;; regularnym w `tex-magic-space', a w wyniku dyskusji powsta³a obecna
;; wersja `tex-magic-space', u¿ywaj±ca zmiennej `last-command-char'
;; i funkcji `self-insert-command'
;;
;; From: Michal Jankowski <Michal.Jankowski@@fuw.edu.pl>
;; Subject: Re: Test sierotek
;; Date: 30 Oct 2001 13:02:16 +0100
;;
;; W wyniku porównania z inn± implementacj± magicznej spacji (`spacja')
;; z artyku³u "GNU Emacs Lisp" rzyjontka na debian.otwarte.pl
;; http://debian.otwarte.pl/article.php?aid=39
;; (obecnie http://www.debianusers.pl/article.php?aid=36)
;; (w szczególno¶ci innego jej zachowania) powsta³o pytanie o to, jakie
;; w³asno¶ci powinno mieæ `tex-magic-space'
;;
;; From: "Jakub Narêbski" <jnareb@@fuw.edu.pl>
;; Subject: RFC: sierotki.el
;; Newsgroups: pl.comp.dtp.tex
;; Date: 14 Nov 2002 14:13:26 GMT
;;
;; Dyskusja trwa...
d124 2
a125 21

;;; Change Log[pl]:

;; Wersja 1.2 (RCS revision 1.2):
;; * Dodano `tex-toggle-magic-space'.
;; Wersja 1.3 (RCS revision 1.4):
;; * Wyra¿enia regularne w zmiennych, a nie zapisane wewn±trz funkcji.
;; Wersja 2.0 (RCS revision 1.6):
;; * Nowa implementacja `tex-magic-space'.
;; Wersja 2.3 (RCS revision 1.12):
;; * Pojawi³ siê TeX Magic Space minor mode (przypisany do `C-c SPC').
;; Wersja 2.4 (RCS revision 1.17):
;; * Dodane porady i polecenie do ich w³±czana (przypisane do `C-c @@'), aby
;;   `tex-magic-space' pozostawa³a nieaktywna tam gdzie nie trzeba (np.
;;   w trybie matematycznym wykrywanym za pomoc± `texmathp').
;; Wersja 2.5 (RCS revision 1.26):
;; * Usuniêcie `tex-toggle-magic-space'; u¿yj `tex-magic-space-mode'. 
;; Wersja 2.6 (RCS revision 1.31):
;; * Sprawdzania czy `tex-magic-space' powinno byæ nieaktywne zosta³o
;;   przepisane za pomoc± instrukcji warunkowej w g³ównej funkcji zamiast
;;   u¿ywania do tego porad (advice).
a131 1
;;;; Usuwanie sierotek w istniej±cym dokumencie, interaktywne.
d134 1
a134 1
;;; Modified by Jakub Narêbski <jnareb@@fuw.edu.pl>
a135 3
;; Zastêpuje znaki odstêpu przez znaki tyldy `~', czyli TeX-ow± nie³amliw±
;; spacjê, po jednoliterowych [polskich] spójnikach w ca³ym buforze.
;; Poni¿sza zmienna definiuje wyra¿enie regularne u¿ywane w `tex-hard-spaces'
a142 2
;; Zwyk³e `query-replace-regexp', czyli C-M-% dla odpowiedniego
;; wyra¿enia regularnego, zapisanego w `tex-hard-spaces-regexp'
a163 1
;;;; Zapobieganie powstawaniu sierotek 'w locie'
d166 1
a166 1
;;; Modified by Jakub Narêbski <jnareb@@fuw.edu.pl>
a170 1
;;; Testy dla `tex-magic-space'
d195 1
a195 1
	 ;;(or (insert "!") t)
d201 1
a201 1
	 ;;(or (insert "!") t)
a207 1
;;; Aktywacja sprawdzania/testów dla tex-magic-space i podobne
a227 1
;;; Wstawianie tyld w locie
a228 3
;; UWAGA: [czasami] polskie literki s± traktowane jako koniec s³owa dla 8bit
;;        tzn. przy u¿yciu `standard-display-european' do ich wprowadzania.
;;        Bêdê próbowac znale¼æ dok³adne warunki wyst±pienia b³edu.
d264 1
a264 1
  (interactive "p")	               ; Prefix arg jako liczba.  Nie robi I/O.
d271 1
a271 1
	   tex-magic-space-regexp      ; wyra¿enie rozpoznaj±ce samotne spójniki
d273 2
a274 2
      (setq last-command-char ?~)))    ; wstawiamy `~' zamiast SPC
  (self-insert-command (or prefix 1))) ; daje obs³ugê auto-fill, abbrev, blinkin-paren
a284 1
;;; Definicja trybu i inicjalizacja
d310 1
a322 6
  ;; alternative, less clear and slower
;;;  (setq tex-magic-space-mode
;;;	(not (or (and (null arg) tex-magic-space-mode)
;;;		 (<= (prefix-numeric-value arg) 0))))
  ;; uaktualnij modeline
  ;; IDEA: mo¿na by dodaæ informowanie o w(y)³±czeniu tego trybu
d342 1
a342 20
;;; NOTES:
;;; * "Hide ifdef" mode z hideif.el u¿ywa "pseudotrybu" `hide-ifdef-hiding' do
;;;   wy¶wietlania opcjonalnego " Hiding", tzn. dodaje do `minor-mode-alist'
;;;   (hide-ifdef-hiding . " Hiding") oprócz (hide-ifdef-mode . " Ifdef").
;;; * "CC Mode" analogicznie, dodaje (c-auto-hungry-string
;;;   . c-auto-hungry-string), gdzie c-auto-hungry-string to odpowiednio "/ah"
;;;   lub analogiczne; automagicznie siê zmienia.
;;; * elementami `minor-mode-alist' powinny byæ pary (VARIABLE STRING), gdzie
;;;   STRING to mo¿e byæ (patrz `mode-line-format'):
;;;   - STRING, u¿yty jak jest, z wykorzystaniem %-sth
;;;   - SYMBOL, u¿yta jest jego warto¶æ (je¶li ró¿na od t lub nil); %-sth
;;;     nie s± rozpoznawane gdy warto¶ci± jest string
;;;   - (:eval FORM), FORM jest obliczana i umieszczany wynik (Emacs 21)
;;;   - (STRING REST...), (LIST REST...), oblicz rekurencyjnie i po³±cz wyniki
;;;   - (SYMBOL THEN ELSE) lub (SYMBOL THEN), np. u¿ycie `minor-mode-alist'
;;;   - (WIDTH REST...), dope³nione WIDTH spacjami je¶li WIDTH > 0, skrócony
;;;     do -WIDTH kolumn je¶li WIDTH < 0; przyk³ad: (-3 "%p"), procent pliku
;;; * wiêkszo¶æ trybów "rêcznie" dodaje siê do modeline...

;;; 'Zarejestrowanie' trybu; na podstawie kodu z reftex.el
a343 3
    ;; Je¶li dostêpna jest funkcja `add-minor-mode' (w FSF Emacs jest to funkcja
    ;; kompatybilno¶ci z XEmacsem, zdefiniowana w `subr'), to u¿yj jej aby
    ;; uzyskaæ ekstra funkcjonalno¶æ, tzn. wpis do minor mode menu w modeline.
d345 1
a345 5
      ;; W³asno¶æ (property) :included ustala, czy dany trub jest widoczny w
      ;; minor mode menu w modeline.  Teoretycznie podana warto¶æ powinna
      ;; spowodowaæ wpisanie do menu tylko dla podanych trybów; w FSF Emacs 21.2-7
      ;; jednak¿e w³asno¶æ ta jest sprawdzana tylko przy wykonywaniu
      ;; `add-minor-mode'; w XEmacs 21.4.6-7 nie jest w ogóle sprawdzana
a347 10
      ;; W³asno¶æ (property) :menu-tag podaje tekst pojawiaj±cy siê w minor mode
      ;; menu w modeline; w XEmacs 21.4.6-7 nie daje ¿adnego efektu, w minor
      ;; mode menu s± wszystkie minor mode, ten tryb jako "tex-magic-space-mode"
      ;; IDEA: mo¿na by dodaæ do 'tex-magic-space-mode w³asno¶æ
      ;; `menu-enable'; i tak (nie wiem dlaczego) nie dzia³a; mo¿e FORM nie eval?
;;;   (put 'tex-magic-space-mode 'menu-enable '(memq major-mode '(latex-mode
;;;						                  tex-mode)))
      ;; je¶li `add-minor-mode' u¿ywa `menu-item' to u¿yæ w³asno¶ci :visible
      ;; FORM lub :included FORM, :key-sequence KEY (aby przyspieszyæ ³adowanie)
      ;; NOTE: `add-minor-mode' u¿ywa (define-key mode-line-menu... :button ...)
a348 2
      ;; IDEA: tutaj mo¿na by dodaæ za pomoc± funkcji `propertize' dodatkowe
      ;; w³asno¶ci typu :help-echo, :local-map, :display czy :face
a351 8
  ;; Standardowy sposób dodania minor mode, za "Emacs Lisp Reference Manual"
;;;(define-key mode-line-mode-menu
;;; (vector 'tex-magic-space-mode)
;;; ;; mo¿na by u¿yæ ` do "cytowania" (quote) tylko czê¶ci
;;; (list 'menu-item "TeX Magic Space"
;;;		'tex-magic-space-mode
;;;		:visible '(memq major-mode '(latex-mode tex-mode))
;;;		:button   (cons :toggle tex-magic-space-mode)))
a354 3
		;; (propertize " ~"
		;;	       'local-map mode-line-minor-mode-keymap
		;;	       'help-echo "mouse-3: minor mode menu")
d363 1
a363 1
;;;; Inicjalizacja dla zapobiegania powstawaniu sierotek 'w locie'
d365 2
a366 2
;;; Initialization by Jakub Narêbski <jnareb@@fuw.edu.pl>
;;; and Adam Przepiórkowski <adamp_at@@at_ipipan.waw.pl>
d368 1
a368 5
;; Przypisz globalnie `tex-magic-space-mode' do `C-c SPC'
;; `mode-specific-map' to (globalna) mapa klawiatury dla prefiksu C-c
;; IDEA: `tex-magic-space-toggle-checking' mo¿e byæ w mapie dla TeX Magic
;; Space mode, tzn. w `tex-magic-space-mode-map'; jako prefiksu mo¿na by
;; u¿yæ `C-c C-SPC', a jako klawiszy " ", "m", "f", "u".
a370 16
;; aby wpisaæ 'C-SPC' trzeba u¿yæ wektora zamiast ³añcucha, t.j. [?\C- ]

;; TO DO: przepisaæ to z powrotem na LaTeX-mode-hook, TeX-mode-hook,
;; reftex-mode-hook i tym podobne.  `define-key' dla odpowiedniej mapy
;; wystarczy zdefiniowaæ raz w chwili gdy mapa jest dostêpna (za pomoc±
;; `eval-after-load') i domy¶lnie w danym trybie we wszystkich buforach
;; `tex-magic-space' bêdzie w³±czone lub nie.  `tex-magic-space-mode' (lub
;; ustawienie zmiennej) jest lokalne dla bufora (i takie powinno pozostaæ),
;; wiêc nale¿y dodaæ je do odpowiednich haków za pomoc± `add-hook' (uwaga:
;; jako argument pobiera on FUNCTION, a nie FORM!).

;; HAKI: reftex-mode-hook, reftex-load-hook (RefTeX), TeX-mode-hook,
;; LaTeX-mode-hook (AUCTeX, nieudokumentowane),
;; TeX-auto-prepare-hook/TeX-auto-cleanup-hook (AUCTeX), bibtex-mode-hook
;; (BibTeX), tex-mode-hook, plain-tex-mode-hook/latex-mode-hook (tex-mode);
;; uruchamia siê tak¿e text-mode-hook (AUCTeX, tex-mode)
d372 1
a372 1
;; W³±cz TeX Magic Space mode dla znanych trybów (La)TeX-owych
a398 1
;;;; Zakoñczenie
d402 1
a402 5
;; Local variables:
;; coding: iso-latin-2
;; End:

;;; sierotki.el ends here
@


1.36
log
@Uaktualnienie informacji w sekcji "Commentary:", zarówno wersji
polskiej jak i angielskiej.

(texinverbp): Zamiany funkcji na ich równowa¿niki/aliasy, aby funkcja
ta dzia³a³a zarówno w FSF Emacsie jak i w XEmacsie.  W komentarzu nad
funkcj± niepotrzebny jak siê okaza³o workaround dla XEmacsa.

(tex-magic-space-mode): Rozszerzenie docstring dla tej funkcji, bêd±ce
jednocze¶nie opisem trybu TeX Magic Space mode.

Zakomentowanie przypisania `tex-magic-space-toggle-checking' do `C-c @@'.
@
text
@d5 1
a5 1
;; Author: 	Ryszard Kubiak   <rysiek@@ipipan.gda.pl>
d10 2
a11 2
;; RCS version:	$Revision: 1.35 $
;; Date: 	$Date: 2003/10/24 07:53:58 $
d19 4
a22 1
;; $Id: sierotki.el,v 1.35 2003/10/24 07:53:58 jnareb Exp jnareb $
d41 2
d45 2
d53 2
a54 2
;; If you do not want to load this package before it is necessary, you 
;; can make use of the `autoload' feature, e.g. adding to your .emacs 
d61 1
a61 1
;; Then after turning on `tex-magic-space-mode' via `C-c SPC' 
d88 1
a88 1
;; Je¶li chcesz by TeX Magic Space mode by³ automatycznie w³±czany 
d95 1
a95 1
;;; Commentary:
d128 1
a128 1
;;; Commentary[pl]:
a161 12
;; Turning on and activation the `tex-magic-space-texmathp' advice or its
;; equivalent (with the standard configuration for `texmathp') makes
;; `tex-magic-space' around 10 times slower
;; (measured using "elp" package).  [This info is out-of-date.]

;;; Notes[pl]:

;; W³±czanie i aktywacja porady `tex-magic-space-texmathp', lub jej
;; odpowiednika (ze standardowymi warto¶ciami zmiennych dla `texmathp')
;; powoduje oko³o 10-krotne zwolnienie dzia³ania `tex-magic-space'
;; (zmierzono za pomoca pakietu "elp").  [Ta informacja jest nieaktualna].

d205 1
a205 1
;; nadaje siê do `funcall' za pomoc± `fboundp' owin±c wszystko w
d208 2
d217 1
a217 1
;; There is no "History:" section in English because all references 
d250 1
a250 1
;; http://debian.otwarte.pl/article.php?aid=39 
d265 6
d273 1
a273 1
;; Version 2.4 (RCS revision 1.22):
d277 2
d280 1
a280 1
;; * Checking if `tex-magic-space' should be active changed from 
d285 6
d293 1
a293 1
;; Wersja 2.4 (RCS revision 1.22):
d297 2
d395 1
a395 1
  "Non-nil if `tex-magic-space' checks `tex-magic-space-tests'.
d399 1
a399 1
(defvar tex-magic-space-tests 
d403 3
a405 1
  "List of functions which are invoked, in order, to determine whether
d408 2
a409 1
a nil value.")
d457 1
a457 1
	       (some (lambda (f) (and (fboundp f) (funcall f))) 
@


1.35
log
@Dodanie paru wpisów w sekcji "To do:".

Usuniêcie , dziêki czemu mo¿na zrobiæ `eval-buffer' oraz u¿yæ elint.

`texinverp' nie dzia³a/mo¿e nie dzia³aæ w XEmacsie.  Dodany komentarz;
do³±czanie texinverbp do tex-magic-space-tests tylko gdy nie u¿ywamy
XEmacsa. TO DO: przerobiæ.

Do³±czanie do tex-magic-space-tests funkcji texmathp tak¿e gdy zosta³
u¿yty AUCTeX, a nie tylko kiedy jest dostêpna (to jest funkcja
auto³adowana).

W `tex-magic-space' dodanie sprawdzania, czy element
tex-magic-space-tests jest funkcj± (fboundp). Wywo³ywanie funkcji
bezparametrowej, a nie z prefix jako parametrem. TO DO: u¿ycie
condition-case czy unwind-protect.

W definicji tex-magic-space-mode-map ró¿ne reprezentacje C-c C-SPC dla
Emacsa (?\C-c ?\C- ) i XEmacsa ((control c) (control space)).
TO DO: wspólna reprezentacja, je¶li istnieje.
@
text
@d9 3
a11 3
;; Version: 	2.6.4
;; RCS version:	$Revision: 1.34 $
;; Date: 	$Date: 2003/10/22 19:30:38 $
d19 1
a19 1
;; $Id: sierotki.el,v 1.34 2003/10/22 19:30:38 jnareb Exp jnareb $
d111 2
a112 1
;; is denoted by " ~" in the modeline.
d114 1
a114 1
;; The TeX Magic Space mode is automatically turned on in the TeX modes
d116 2
a117 1
;; hooks defined in the variable `tex-magic-space-mode-hooks-list'.
d140 9
a148 9
;; `tex-magic-space-mode'.  Tryb (minor mode) TeX Magic Space mo¿na
;; aktualnie w³±czyæ tak¿e z modeline minor mode menu; jest on oznaczany za
;; pomoc± " ~".  Ewentualne dodatkowe oznaczenia po " ~" informuj±, ze
;; porady s± aktywne i pokazuj± które porady s± w³±czone.
;;
;; Funkcjonalno¶æ ta jest automatycznie w³±czana w trybach TeX-owych
;; za pomoc± dodania odpowiednika `turn-on-tex-magic-space-mode' do
;; odpowiednich haczyków (zdefiniowanych w zmiennej
;; `tex-magic-space-mode-hooks-list') za pomoc± `add-hook'.
d344 4
d355 1
a355 3
line characters.  Does not work with nested \\verb s.

May not work in XEmacs."
d363 1
a363 1
					   (line-beginning-position) t)
d365 1
a365 1
	 (setq delim (regexp-quote (match-string-no-properties 1)))
d369 1
a369 1
					    (line-end-position))
d485 8
a492 4
With prefix argument ARG, turn on if positive, otherwise off.
Returns non-nil if the new state is enabled.
\\<tex-magic-space-mode-map>
In this minor mode `\\[tex-magic-space]' runs the command `tex-magic-space'."
d603 1
a603 1
(define-key mode-specific-map "@@" 'tex-magic-space-toggle-checking)
@


1.34
log
@Usuniêcie automatycznego w³±czania TeX Magic Space mode w trybach
LaTeX-owych (dodawania do haczyków) i dodanie funkcji która to w³a¶nie
robi.  Info w "Installation:".

Poprawienie b³êdu: pozostawiony tex-magic-space-checking-string sprzed
poprzedniej zmiany.

Dodanie dwu punktów w "To do:".
@
text
@d9 3
a11 3
;; Version: 	2.6.3
;; RCS version:	$Revision: 1.33 $
;; Date: 	$Date: 2003/10/21 23:31:26 $
d19 1
a19 1
;; $Id: sierotki.el,v 1.33 2003/10/21 23:31:26 jnareb Exp jnareb $
d183 1
d201 10
d291 1
a291 1

d329 1
a329 1

d337 1
a337 1

d349 3
a351 1
line characters.  Does not work with nested \\verb s."
d384 2
a385 2
   'texinverbp
   (if (fboundp 'texmathp) 'texmathp))
d389 2
a390 1
a nil value")
a391 1

d437 2
a438 1
	       (some (lambda (f) (funcall f prefix)) tex-magic-space-tests))
d452 1
a452 1

d466 3
a468 1
    (define-key map [?\C-c ?\C- ] 'tex-magic-space-toggle-checking)
d582 1
a582 1

d637 1
a637 1
^L
@


1.33
log
@Uproszczenie turn-on-tex-magic-space-mode i dodawanie tej nazwanej
funkcji do haczyków (hooks) zamiast anonimowej funkcji.
@
text
@d9 3
a11 3
;; Version: 	2.6.2
;; RCS version:	$Revision: 1.32 $
;; Date: 	$Date: 2003/10/21 23:25:43 $
d19 1
a19 1
;; $Id: sierotki.el,v 1.32 2003/10/21 23:25:43 jnareb Exp jnareb $
d56 6
a61 1
;; that this mode _won't_ be turned on automatically in LaTeX modes.
d78 1
a78 1
;; automatycznego ³adowania ten tryb _nie_ bêdzie automatycznie w³±czany
d80 6
d156 1
a156 1
;; (measured using "elp" package).
d163 1
a163 1
;; (zmierzono za pomoca pakietu "elp").
d192 8
d240 2
a241 1
;; http://debian.otwarte.pl/article.php?aid=39
d490 1
a490 1
	(if (null arg) (not tex-magic-space-checking-string)
d556 1
a556 2
	  (cons '(tex-magic-space-mode (" ~" (tex-magic-space-checking-string
					      tex-magic-space-checking-string)))
d603 1
a603 1
  "Add `(setq 'tex-magic-space-mode t)' to each of HOOKS."
d612 1
a612 3
  "List of hooks to which add turning on TeX Magic Space minor mode.
You must set this using (setq tex-magic-space-mode-hooks-list LIST) before
loading this file i.e. before (require 'sierotki).")
d614 5
a618 1
(tex-magic-space-mode-initialize tex-magic-space-mode-hooks-list)
a624 2
;; Aby mo¿na by³o ³adowaæ ten plik zarówno za pomoc±
;; (load "sierotki") jak i (requires 'sierotki)
@


1.32
log
@Update sekcji "Change Log:".

Zmiana tex-magic-space-checking-string na tex-magic-space-do-checking.
£añcuch wpisany jawnie w definicjê trybu.
@
text
@d9 3
a11 3
;; Version: 	2.6.1
;; RCS version:	$Revision: 1.31 $
;; Date: 	$Date: 2003/10/21 22:34:24 $
d19 1
a19 1
;; $Id: sierotki.el,v 1.31 2003/10/21 22:34:24 jnareb Exp jnareb $
d438 3
a440 2
  "Turn on TeX Magic Space mode."
  (tex-magic-space-mode t))
d580 2
a581 2
  "Add `(setq 'tex-magic-space-mode t)' to HOOK."
  `(add-hook ,hook (function (lambda () (setq tex-magic-space-mode t)))))
d594 1
a594 1
You must set this using (setq tex-magic-space-mode-hooks-list VALUE) before
@


1.31
log
@Dodane angielskojêzyczne wersje nag³ówków czê¶ci.

Reorganizacja: najpierw testy, potem zmienna zwi±zane z testami,
definicja tex-magic-space i trybu a nastêpnie w³±czenie testów.

ZMIANA: testowanie czy przypadkiem otoczenie bie¿±cego punktu nie
zabrania wstawiania tylkd (nie³amliwych spacji), np. czy nie jeste¶my
w trybie matematycznym wpisane w definicjê tex-magic-space, zamiast
u¿ycia porady.  Na razie u¿ywamy some z cl-extra.

Usuniêto kod zwi±zany z testowaniem jak pokolorowane za pomoc±
font-lock jest miejsce w którym znaduje siê kursor; byæ mo¿e zostanie
przywrócone.  Usuniêto wiêkszo¶æ komentarzy zwi±zanych z poradami.
@
text
@d9 3
a11 3
;; Version: 	2.6.0
;; RCS version:	$Revision: 1.30 $
;; Date: 	$Date: 2003/10/21 19:39:27 $
d19 1
a19 1
;; $Id: sierotki.el,v 1.30 2003/10/21 19:39:27 jnareb Exp jnareb $
d241 3
d247 1
a247 1
;; Version 2.3 (RCS revision 1.12):
d249 1
a249 1
;; Version 2.4 (RCS revision 1.22):
d253 4
d318 1
a318 1
line characters.  Does not work with nested \\verbs."
d344 1
a344 1
(defvar tex-magic-space-checking-string ":Chk"
a345 1
Its value is string describing that checking is active.
d403 1
a403 1
  (unless (and tex-magic-space-checking-string
d415 1
a415 1
  (let ((tex-magic-space-checking-string nil))
d466 1
a466 1
Sets `tex-magic-space-checking-string'."
d468 3
a470 4
  (setq tex-magic-space-checking-string
	(cond ((null arg) (if (null tex-magic-space-checking-string)
			      ":Chk"))
	      ((> (prefix-numeric-value arg) 0) ":Chk")))
d474 1
a474 1
	     (if tex-magic-space-checking-string "a" "dea"))))
d523 1
a523 2
		      (list " ~" '(tex-magic-space-checking-string
				   tex-magic-space-checking-string))
@


1.30
log
@Przeniesienie czê¶ci komentarzy TO DO: do nag³ówka.  Usuniêcie czê¶ci
komentarzy.

(tex-magic-space-mode): U¿ycie if zamiast wyra¿enia boolowskiego.
@
text
@d9 3
a11 3
;; Version: 	2.5.3
;; RCS version:	$Revision: 1.29 $
;; Date: 	$Date: 2003/10/21 19:13:23 $
d19 1
a19 1
;; $Id: sierotki.el,v 1.29 2003/10/21 19:13:23 jnareb Exp jnareb $
d255 1
d293 1
d299 58
d373 1
d396 8
a403 4
  (when (string-match
	 tex-magic-space-regexp	       ; wyra¿enie rozpoznaj±ce samotne spójniki
	 (buffer-substring (max (point-min) (- (point) 2)) (point)))
    (setq last-command-char ?~))       ; wstawiamy `~' zamiast SPC
d406 5
d414 2
a415 20
;;; "Porady" (advices) dla `tex-magic-space'

;; IDEE:
;; a. `texmathp', udostêpniane (enable) po za³adowaniu "texmathp"
;; b. a la `texmathp' lub `LaTeX-modify-environment' u¿ywane przez
;;    `LaTeX-environment', sprawdzanie czy jeste¶my wewn±trz jednego z
;;    otoczeñ lub pseudootoczeñ (\verb!...!) zdefiniowanych przez
;;    u¿ytkownika, a la `tildify-ignored-environments-alist'; je¶li u¿ywamy
;;    AUCTeX-a to mogliby¶my u¿yæ poleceñ `LaTeX-find-matching-begin'
;;    i `LaTeX-find-matching-end', za¶ do poleceñ czego¶ jak w `texmathp',
;;    u¿ywaj±c `forward-list' lub `up-list', `forward-sexp' (zawiera tak¿e
;;    s³owa, ograniczone ³añcuchy itp.) z odpowiedni± syntax table.
;; c. sprawdzanie czy font (face) nale¿y do okre¶lonej listy
;; d. zdefiniowana przez u¿ytkownika FORM (np. '(and FORM FORM))
;;
;; Ad c. `memq' (u¿ywa `eq') i `member' z cl (u¿ywa `equal'); je¶li w³asno¶æ
;; (property) jest list± nale¿y przeiterowaæ po jej elementach (let ((idx
;; list)) (while idx ... (setq idx (cdr idx)))) ew. `dolist', lub u¿yæ
;; `intersection' z pakietu CL (Common Lisp).  Na razie jest to zrobione
;; tak, aby dzia³a³o.
a416 5
(defun texinverbp ()
  "Determine if point is inside LaTeX \\verb command.
Returns nil or the pair (POINT-VERB-BEG . POINT-VERB-END) of positions where
\\verb argument begins and ends or the position POINT-VERB-BEG where \\verb
command argument begins if \\verb is unfinished (has no closing delimiter).
a417 223
This command uses the fact that the argument to \\verb cannot contain end of
line characters."
  (interactive)
  (let ((point (point))
	beg
	end
	delim)
  (save-excursion
    (and (setq beg (and (re-search-backward "\\\\verb\\*?\\([^a-zA-Z*\\n]\\)"
					   (line-beginning-position) t)
		       (match-end 0)))
	 (setq delim (regexp-quote (match-string-no-properties 1)))
	 (goto-char beg)
	 ;;(or (insert "!") t)
	 (setq end (and (skip-chars-forward (concat "^" delim)
					    (line-end-position))
			(point)))
	 (or (eolp)
	     (looking-at (concat "[" delim "]")))
	 ;;(or (insert "!") t)
	 (cond ((>= point end) nil)
	       ((eolp) beg)
	       (t (cons beg end)))))))

;; IDEE: `tex-magic-space-texmathp'
;; * mo¿liwo¶ci sprawdzania, czy `texmathp' jest dostêpne:
;;   - sprawdzenie za pomoc± `fboundp' czy symbol `texmathp' ma niepust±
;;     "function cell", tzn. (zazwyczaj) czy funkcja `texmathp' jest
;;     zdefiniowana.
;;   - sprawdzenie za pomoc± `featurep' czy jest dostêpna cecha (feature)
;;     'texmathp, tzn. czy plik "texmathp" zosta³ za³adowany (a wiêc i
;;     zadeklarowana w nim funkcja `texmathp' jest dostêpna)
;;   - u¿ycie pu³apki `condition-case' lub `unwind-protect', sprawdzaj±c czy
;;     wyst±pi³ b³±d `void-function' albo jakikolwiek b³±d; przyk³ad u¿ycia
;;     `condition-case' poni¿ej (`unwind-protect' mo¿na zrobiæ automatycznie
;;     za pomoc± w³asno¶ci "protected" przy definiowaniu porady)
;;
;;     (defun test-math ()
;;       (interactive)
;;       (condition-case err
;;           (and (texmathp)
;;      	   (message "Why: %s" (princ texmathp-why))
;;      	   (message "Face: %s" (princ (get-text-property (point) 'face))))
;;         ;; This is the handler; it is not a form
;;         (error (princ (format "The error was: %s\n" err))
;;      	   nil)))
;;
;;   - zapewnienie, ¿e w chwili uruchomienia porady `texmathp' jest dostêpne
;;     lub zostanie za³adowane na ¿±danie (autoload), oraz ¿e porada jest
;;     wy³±czona (disabled) gdy `texmathp' jest niedostêpna i jest
;;     automatycznie w³±czana (enabled) przy ³adowaniu "texmathp" (jako ¿e
;;     "texmathp" nie udostêpnia ¿adnych haków u¿ywamy `eval-after-load').
;;
;; * kompilacja porady `tex-magic-space-texmathp' jest utrudniona przez to,
;;   ¿e w czasie kompilacji powinna byæ dostêpna definicja `texmathp'; mamy
;;   parê mo¿liwo¶ci
;;   - zignorowaæ ten fakt, godz±c siê z tym, ¿e w czasie kompilacji
;;     `texmathp' mo¿e nie byæ dostêpne
;;   - za¿±daæ, by bezwarunkowo w czasie kompilacji by³o ³adowane
;;     "texmathp", zg³aszaj±c b³±d gdy nie jest dostêpne
;;   - ³adowaæ "texmathp" w czasie kompilacji, ignoruj±c ewentualn± jego
;;     niedostêpno¶æ
;;   - ³adowaæ "texmathp" w czasie kompilacji, a je¶li jest niedostêpne to
;;     nie definiowaæ porady `texm-magic-space-texmathp' (np. za pomoc±
;;     wykrywania b³êdów za pomoc± `condition-case' lub ignorowania
;;     niedostêpno¶ci i sprawdzania czy "texmathp" zosta³o za³adowane za
;;     pomoc± (featurep 'texmathp))
(eval-when-compile (require 'texmathp))


;; UWAGA: Ró¿ne pliki ró¿nie definiuj± font (face) dla trybu matematycznego:
;; * AUCTeX: font-latex.el:  font-latex-math-face (LaTeX math expressions)
;; * AUCTeX: hilit-LaTeX.el: w³asne funkcje, u¿ywa hilit19
;; * AUCTeX: tex-font.el:    tex-math-face (TeX math expressions)
;; * Emacs:  tex-mode.el:    tex-math-face (TeX math expressions)
;; ale mo¿na u¿ywaæ `tex-math-face'.
;;
;; UWAGA: kolorowanie sk³adni w otoczeniach potrafi siê zmieniaæ po zmianie
;; wewn±trz (zapewne zwi±zane jest to z wieloliniowoscia tych wyra¿eñ)
;; czêsto jedn± ze sk³adowych jest font-latex-math-face mimo wnêtrza \mbox{}
;; czy \text{}; \ensuremath nie daje font-latex-math-face.
;;
;; UWAGA: otoczenie verbatim jest kolorowane font-latex-math-face.
(defvar tex-magic-space-face-list
  '(tex-math-face font-latex-math-face font-latex-sedate-face)
  "*List of faces when `tex-magic-space' should be inactive.
Defined in `tex-font' from AUCTeX and `tex-mode' from Emacs
* tex-math-face:          Face used to highlight TeX math expressions.
Defined in `font-latex' from AUCTeX:
* font-latex-math-face:   Face to use for LaTeX math environments.
* font-latex-sedate-face: Face to use for LaTeX minor keywords.")


(defun nonempty-intersection (list-or-atom list)
  "Return non-nil if any element of LIST-OR-ATOM is element of LIST.
Comparison done with EQ using `memq'.  This version uses `while' to
iterate over elements of LIST-OR-ATOM."
  (let ((found)
	(elems list-or-atom))
    (if (atom list-or-atom)
	(memq list-or-atom list)
      (while (and elems (not found))
	(setq elems (cdr elems))
	(setq found (memq (car elems) list)))
      found)))
  

;; Nie wiem jak bêdzie z kompilowaniem porad u¿ywaj±cych "user form",
;; tzn. czy zawarto¶æ "user form" jest kompilowana.

(defconst tex-magic-space-auctex-form	; lub tex-magic-space-texmathp-form
  '(and (fboundp 'texmathp) (texmathp))
  "Inactive in math mode as defined by `texmathp'.
See the variable `texmathp-tex-commands' about which commands are checked.
See the variable `texmathp-search-n-paragraphs' for limiting the search
\(there is no limit on the empty line (paragraph) search).

TO DO: this is the form which can be used only when AUCTeX is used.")

(defconst tex-magic-space-font-lock-form
  '(nonempty-intersection (get-text-property (point) 'face)
			  tex-magic-space-face-list)
  "Inactive when face belongs to `tex-magic-space-face-list'.

TO DO: this is the form which can be used only when Font Lock is active.")

(defvar tex-magic-space-user-form
  'tex-magic-space-auctex-form
  "*User defined form defining when `tex-magic-space' should be inactive.
It should eval to non-nil when POINT is in some part of document where one
don't want `tex-magic-space' to be active (i.e. to insert tildes).

You must set it before loading sierotki.el or [re]activate advices for
`tex-magic-space' after changing this variable using command
`tex-magic-space-toggle-checking' (`C-u \\[tex-magic-space-toggle-checking]').

Used in advice `tex-magic-space-user-form'")

(defadvice tex-magic-space
  (around tex-magic-space-user-form (&optional prefix) preactivate)
  "Inactive when `tex-magic-space-user-form' is non-nil."
  (interactive "P")
  (if (not (eval tex-magic-space-user-form))
      ad-do-it
    (self-insert-command (or prefix 1))))

;; je¶li u¿ytkownik nie zdefiniowa³ `tex-magic-space-user-form' to czynimy
;; nieaktywn± (disable) poradê `tex-magic-space-user-form'
(unless tex-magic-space-user-form
  (ad-disable-advice 'tex-magic-space 'around 'tex-magic-space-user-form))


;;; ......................................................................
;;; Aktywacja porad i podobne
(defvar tex-magic-space-checking-string
  (and (ad-is-active 'tex-magic-space)
       ":Adv")
  "Non-nil if advices for `tex-magic-space' are active.
Its value is string describing which advices are enabled.

Set by `tex-magic-space-toggle-checking'")

(defun tex-magic-space-toggle-checking (&optional arg)
  "Toggle whether `tex-magic-space' detects math mode.
With prefix argument ARG, activate detection if ARG is positive,
otherwise deactivate it.  Uses advice `tex-magic-space-texmathp'.
When advices are active, enabled advices are shown in the modeline after
TeX Magic Space mode string, `~'.

Sets `tex-magic-space-checking-string'.

See also: `tex-magic-space-texmathp', `tex-magic-space-face',
`tex-magic-space-user-form'"
  (interactive "P")
  ;; udostêpnij (enable) poradê `tex-magic-space-user-form' je¶li
  ;; zmienna `tex-magic-space-user-form' jest ró¿ne od nil
  (if (null tex-magic-space-user-form)
      (ad-disable-advice 'tex-magic-space 'around 'tex-magic-space-user-form)
    (ad-enable-advice 'tex-magic-space 'around 'tex-magic-space-user-form))
  ;; zale¿nie od warto¶ci prefiksu i aktywno¶ci porad aktywujemy lub
  ;; deaktywujemy _wszystkie_ porady do `tex-magic-space'.
  (cond ((null arg) (if (ad-is-active 'tex-magic-space)
			(ad-deactivate 'tex-magic-space)
		      (ad-activate 'tex-magic-space)))
	((> (prefix-numeric-value arg) 0) (ad-activate 'tex-magic-space))
	(t (ad-deactivate 'tex-magic-space)))
  ;; ustawiamy zmienn± `tex-magic-space-checking', która opisuje które
  ;; porady s± w³±czone; je¶li porady s± niektywne jest równa nil.
  (setq tex-magic-space-checking-string
	(and (ad-is-active 'tex-magic-space)
	     ":Adv"))
  (if tex-magic-space-mode
      (force-mode-line-update)
    ;; poinformuj o w³±czeniu porad je¶li nie widaæ tego po modeline
    ;; bo `tex-magic-space-mode' jest nieaktywne
    (message "Advices for tex-magic-space %sctivated."
	     (if (ad-is-active 'tex-magic-space) "a" "dea"))))
	   
;; see also: `ad-is-advised', `ad-is-active', `ad-has-enabled-advice',
;;  `ad-get-enabled-advices', `ad-find-some-advice' and `ad-advice-enabled';       

;; TO DO:
;; 0. tex-magic-space-active, zawieraj±ca nil lub t, zale¿nie od tego czy
;;    porady s± aktywne czy nie (aby zmienna tex-mabic-space-enabled-string
;;    nie pe³ni³a jednocze¶nie dwu funkcji).
;; 1. tex-magic-space-enabled-string, zamieniaj±cy dostêpne porady na string.
;; 2. tex-magic-space-enabled-hist, zawieraj±ca historiê dla j.n.
;; 3. tex-magic-space-toggle-enabled, w³±czaj±ca/wy³±czaj±ca dostêpne porady,
;;    byæ mo¿e z wyj±tkiem tex-magic-space-user-form.
;; 4. tex-magic-space-check-user-form, sprawdzaj±ce czy zmienna
;;    tex-magic-space-user-form jest ró¿na od nil i odpowiednio
;;    aktywuj±ce/deaktywuj±ce poradê tex-magic-space-user-form.

;; TO DO: przejechaæ siê po wszystkich advices (mo¿na uwzglêdniaæ tylko
;; klasê around) np. za pomoc± ad-dolist, pobieraj±c je np. za pomoc±
;; (ad-get-advice-info-field 'tex-magic-space 'around), a nastêpnie
;; sprawdziæ jak siê porada nazywa za pomoc± `ad-advice-name' i czy jest
;; w³±czona za pomoc± `ad-advice-enabled'.



;;;; ======================================================================
;;;; `tex-magic-space-mode', mapa klawiatury, zarejestrowanie minor mode
d428 1
a428 1
  "Keymap for TeX Magic Space mode, containing only entry for SPC.")
d455 17
d595 1
d597 1
a600 2

;;; *** Announce ***
@


1.29
log
@Copyright rozszerzony z 2002 na 1999-2003.

Dodane angielskojêzyczne wersje sekcji "Installation:", "Commentary:",
"Notes:", "History:" i "Change Log:", przy czym sekcja "History:"
zawiera informacjê, ¿e istnieje tylko polska wersja tej sekcji.
Polskojêzyczne sekcje dosta³y postfix "[pl]" po nazwie sekcji.
@
text
@d10 2
a11 2
;; RCS version:	$Revision: 1.28 $
;; Date: 	$Date: 2003/05/29 18:22:47 $
d19 1
a19 1
;; $Id: sierotki.el,v 1.28 2003/05/29 18:22:47 jnareb Exp jnareb $
d173 7
a263 2
  ;; Pierwsza linia dokumentacji jest zbyt d³uga:
  ;; nie powinna przekraczaæ 67 znaków (jest 76 - 3 = 73)
a272 2
  ;; Pierwsza linia dokumentacji
  ;; nie powinna przekraczaæ 67 znaków (jest 68 - 3 = 65)
a299 2
;; TO DO: U¿yæ `defcustom'
;; TO DO: Dodaæ tex-magic-space-regexp-len zamiast 2 (np. dowi±zywanie 'tys.')
a300 2
  ;; Pierwsza linia dokumentacji jest zbyt d³uga:
  ;; nie powinna przekraczaæ 67 znaków (jest 76 - 3 = 73)
a313 2
  ;; Pierwsza linia dokumentacji jest zbyt d³uga:
  ;; nie powinna przekraczaæ 67 znaków (jest 72 - 3 = 69)
a345 2
;; TO DO: Dodaæ `tex-magic-space-checking-why' (a la `texmathp-why'), które
;;        bêdzie podawa³o dlaczego magiczna spacja jest nieaktywna.
d619 4
d624 2
a625 6
;;;	(if (null arg) (not tex-magic-space-mode)
;;;	  (> (prefix-numeric-value arg) 0))))
  ;; w³±cz lub wy³±cz tryb
  (setq tex-magic-space-mode
	(not (or (and (null arg) tex-magic-space-mode)
		 (<= (prefix-numeric-value arg) 0))))
@


1.28
log
@(tex-magic-space-mode-map): poprawione. Dodane `tex-magic-space-toggle-checking',
podczepione pod `C-c C-SPC'.
@
text
@d3 1
a3 1
;; Copyright (C) 2002  Micha³ Jankowski, Jakub Narêbski
d9 3
a11 3
;; Version: 	2.5.2
;; RCS version:	$Revision: 1.27 $
;; Date: 	$Date: 2002/12/13 19:56:58 $
d19 1
a19 1
;; $Id: sierotki.el,v 1.27 2002/12/13 19:56:58 jnareb Exp jnareb $
d40 1
d42 17
a58 1
;;; Installation:
d79 31
d142 7
d155 1
a155 1
;;; To do:
d178 1
d181 5
d227 9
@


1.27
log
@(texinverbp): Poprawione; dodane u¿ycie `quote-regexp', uwzglêdniona
wersja gwiazdkowana komendy \verb, tzn. \verb*.  Dzia³a teraz tak¿e z
niedokoñczonymi poleceniami \verb, tzn. bez koñcz±cego ogranicznika,
zwracaj±c po³ozenie pocz±tku argumentu \verb.

Poprawione komentarze. Checkdoc.
@
text
@d9 3
a11 3
;; Version: 	2.5.1
;; RCS version:	$Revision: 1.26 $
;; Date: 	$Date: 2002/12/13 00:47:21 $
d19 1
a19 1
;; $Id: sierotki.el,v 1.26 2002/12/13 00:47:21 jnareb Exp jnareb $
d536 2
a537 1
    (define-key tex-magic-space-mode-map " " 'tex-magic-space)
@


1.26
log
@(texinverbp): Pierwotna, testowa wersja.  Nie do koñca poprawnie dzia³a.
TO DO: spróbowaæ z re-search-forward zamiast skip-chars-forward.


(tex-toggle-magic-space): Usuniête razem z odniesieniami w komentarzach oraz
docstrings, mam nadziejê ¿e wszystkimi.  Mog± byæ k³opoty w trybach
definiujacych dowi±zanie do spacji, jako ¿e funkcja ta nie zachowuje
pierwotnego dowi±zania; nie dzia³a tak¿e je¶li minor mode definiuje
dowi±zanie do spacji.  Nale¿y u¿ywaæ tex-magic-space-mode.


(tex-magic-space-texmathp,tex-magic-space-face): Usuniêto te porady.  Ich
funkcjonalno¶æ mo¿na uzyskaæ za pomoc± porady tex-magic-space-user-form z
odpowiednim user-form; patrz ni¿ej.  Byæ mo¿e wróci.

(tex-magic-space-auctex-form,tex-magic-space-font-lock-form): Dodane.
Zastêpstwo usuniêtych porad tex-magic-space-texmathp,tex-magic-space-face.
Wersja pierwotna.

(tex-magic-space-checking-string,tex-magic-space-toggle-checking): Zmienione
po usuniêciu powy¿szych porad; zamiast wymienionych aktywnych porad jest po
prostu ":Adv".


(tex-magic-space-mode-map): Definicja w³±czona do deklaracji.
@
text
@d9 3
a11 3
;; Version: 	2.5.0
;; RCS version:	$Revision: 1.25 $
;; Date: 	$Date: 2002/12/10 22:33:53 $
d19 1
a19 1
;; $Id: sierotki.el,v 1.25 2002/12/10 22:33:53 jnareb Exp jnareb $
d76 3
a78 3
;; jednoliterowych spójnikach podczas pisania tekstu (w locie).  Jest
;; ona implementowana przez komendê `tex-magic-space', któr± nale¿y
;; podpi±æ do spacji.  Do aktywowania tej funkcjonalno¶ci nale¿y u¿yæ
d80 3
a82 4
;; aktualnie w³±czyæ z modeline dla trybów g³ównych (major mode)
;; `latex-mode' lub `tex-mode'; jest on oznaczany za pomoc± " ~".
;; Ewentualne dodatkowe oznaczenia po " ~" informuj±, ze porady s± aktywne
;; i pokazuj± które porady s± w³±czone.
d94 4
a97 3
;; W³±czanie i aktywacja porady `tex-magic-space-texmathp' (ze standardowymi
;; warto¶ciami zmiennych dla `texmathp') powoduje oko³o 10-krotne zwolnienie
;; dzia³ania `tex-magic-space' (zmierzono za pomoca pakietu "elp").
d263 1
a263 1
To use it turn on TeX Magic Space minor mode using command 
d275 1
d302 6
a307 1
Returns nil or pair (POINT-VERB-BEG . POINT-VERB-END)."
d314 1
a314 1
    (and (setq beg (and (re-search-backward "\\\\verb\\([^a-zA-Z*\\s-]\\)"
d317 1
a317 2
	 ;; jest k³opot z ogranicznikiem '\', który jest wpisywany jako '\\'
	 (setq delim (match-string-no-properties 1))
d323 2
a324 1
	 (looking-at (concat "[" delim "]"))
d326 3
a328 2
	 (and (< point end) 
	      (cons beg end))))))
d534 1
a534 1
(defvar tex-magic-space-mode-map 
@


1.25
log
@Dodane komentarze.

tex-magic-space-checking-string inicjalizowany na ³añcuch znakowy
okre¶laj±cy które porady s± w³±czone (enabled), zamuast byæ nil lub
t, tzn. (ad-is-active 'tex-magic-space).
@
text
@d9 3
a11 3
;; Version: 	2.4.3
;; RCS version:	$Revision: 1.24 $
;; Date: 	$Date: 2002/11/30 00:01:30 $
d19 1
a19 1
;; $Id: sierotki.el,v 1.24 2002/11/30 00:01:30 jnareb Exp jnareb $
d78 1
a78 2
;; podpi±æ do spacji.  Do aktywowania tej funkcjonalno¶ci mo¿na u¿yæ
;; `tex-toggle-magic-space', albo (co jest bezpieczniejsze)
a119 1
;; `tex-toggle-magic-space' dzia³a w dowolnym trybie (patrz komentarz).
d209 1
a209 2
For on-the-fly 'tildification' bind SPC to `tex-magic-space' using
\\[tex-toggle-magic-space], or turn on TeX Magic Space minor mode using
d263 2
a264 3
Bind it to space using `tex-toggle-magic-space' (\\[tex-toggle-magic-space])
or turn on TeX Magic Space minor mode using command `tex-magic-space-mode'
\(\\[tex-magic-space-mode]).
d299 23
a367 23
(defadvice tex-magic-space
  (around tex-magic-space-texmathp (&optional prefix) preactivate)
  "Inactive in math mode as defined by `texmathp'.
See the variable `texmathp-tex-commands' about which commands are checked.
See the variable `texmathp-search-n-paragraphs' for limiting the search
\(there is no limit on the empty line (paragraph) search)."
  (interactive "p")
  (if (and (fboundp 'texmathp) (not (texmathp)))
      ;; jeste¶my poza trybem matematycznym albo `texmathp' nie istnieje
      ad-do-it
    ;; IDEA: mo¿na u¿yæ `insert' aby deaktywowaæ `auto-fill-mode' itp.
    ;; w trybie matematycznym.
    (self-insert-command (or prefix 1))))

;; je¶li `texmathp' jest ju¿ za³adowane, mo¿emy go u¿ywaæ, w przeciwnym
;; wypadku wy³±czamy (disable) poradê `tex-magic-space-texmathp' i dodajemy
;; jej automatyczne w³±czanie po za³adowaniu pliku `texmathp'
(unless (or (featurep 'sierotki) 	; file was loaded already
	    (fboundp 'texmathp) (featurep 'texmathp))
  (ad-disable-advice 'tex-magic-space 'around 'tex-magic-space-texmathp)
  (eval-after-load "texmathp"
    '(ad-enable-advice 'tex-magic-space 'around 'tex-magic-space-texmathp)))

d389 1
a389 1
* font-latex-sedate-face: Face to use for LaTeX minor keywords.
a390 1
Used in advice `tex-magic-space-face'")
a404 8
(defadvice tex-magic-space
  (around tex-magic-space-face (&optional prefix) preactivate)
  "Inactive when face belongs to `tex-magic-space-face-list'."
  (interactive "P")
  (if (not (nonempty-intersection (get-text-property (point) 'face)
				  tex-magic-space-face-list))
      ad-do-it
    (self-insert-command (or prefix 1))))
d406 18
a423 14
;; je¶li u¿ywamy kolorowania skladni (font lock) to mo¿emy u¿ywaæ tej
;; porady, w przeciwnym wypadku wy³±czamy (disable) poradê
;; `tex-magic-space-face' i dodajemy jej automatyczne w³±czanie do haków
;; font-lock
(unless (or (featurep 'sierotki) 	; file was loaded already
	    (and (boundp 'global-font-lock-mode) global-font-lock-mode)
	    (and (boundp 'font-lock-mode) font-lock-mode))
  (ad-disable-advice 'tex-magic-space 'around 'tex-magic-space-face)
  (add-hook 'font-lock-mode-hook
	    #'(lambda () (ad-enable-advice 'tex-magic-space 'around
					   'tex-magic-space-face)))
  (add-hook 'global-font-lock-mode-hook
	    #'(lambda () (ad-enable-advice 'tex-magic-space 'around
					   'tex-magic-space-face))))
d426 5
a430 2
  'nil
  "*User defined form when `tex-magic-space' should be inactive.
d454 2
a455 13
  (when (ad-is-active 'tex-magic-space)
    (concat
     ":"
     (when (ad-advice-enabled
	    (ad-find-advice 'tex-magic-space 'around 'tex-magic-space-texmathp))
       "m")
     (when (ad-advice-enabled
	    (ad-find-advice 'tex-magic-space 'around 'tex-magic-space-face))
       "f")
     (when (ad-advice-enabled
	    (ad-find-advice 'tex-magic-space 'around 'tex-magic-space-user-form))
       "u")
     ))
d488 2
a489 13
	(when (ad-is-active 'tex-magic-space)
	  (concat
	   ":"
	   (when (ad-advice-enabled
		(ad-find-advice 'tex-magic-space 'around 'tex-magic-space-texmathp))
	     "m")
	   (when (ad-advice-enabled
		(ad-find-advice 'tex-magic-space 'around 'tex-magic-space-face))
	     "f")
	   (when (ad-advice-enabled
		(ad-find-advice 'tex-magic-space 'around 'tex-magic-space-user-form))
	     "u")
	   )))
d492 2
a518 50

;;; ----------------------------------------------------------------------
;;; Toggle magic space by Jakub Narêbski <jnareb@@fuw.edu.pl>,
;;; modifications based on code by Adam P. <adamp_at@@at_ipipan.waw.pl>

;; Przypisuje/wy³±cza przypisanie tex-magic-space do spacji,
;; (przydatne przy pisaniu matematyki)
;;;###autoload
(defun tex-toggle-magic-space (&optional arg)
  "Toggle whether SPC is bound to `tex-magic-space'.
With prefix argument ARG, bind SPC to `tex-magic-space' if ARG is positive,
otherwise bind SPC to `self-insert-command'.

It can be used to toggle temporarily `tex-magic-space' off when writing
equations (with e.g. `i' as index), then turn it on in main text.

Uses local keymap i.e. major mode keymap, so it currently works with
any mode, not only with LaTeX modes (there are several of them and
they do not use one common keymap).

See also command `tex-magic-space-mode' for an alternative way to use
`tex-magic-space'."
  (interactive "P")	                ; Prefix arg w postaci surowej.  Nie robi I/O.
  (let (space-binding
	local-space-binding)
    (cond
     ((null arg)			; brak prefiksu
      (if (local-key-binding " " 'tex-magic-space)
	  (local-unset-key " ")
	(local-set-key " " 'tex-magic-space)))
     ((> (prefix-numeric-value arg) 0) ; dodatni prefiks
      (local-set-key " " 'tex-magic-space))
     (t					; wpp (niedodatni prefiks)
      (local-unset-key " ")))
    ;; koniec cond; opisanie wyniku
    (setq space-binding       (key-binding " "))
    (setq local-space-binding (local-key-binding " "))
    (message "%s runs the command %s%s"
	     (key-description " ")
	     space-binding
	     ;; obs³uga przypadku gdy ta funkcja "nie dzia³a"
	     (if (or (and (null local-space-binding)
			  (eq space-binding 'self-insert-command))
		     (eq (key-binding " ") (local-key-binding " ")))
		 ""
	       (format "; locally bound to %s" (local-key-binding " ")))
	     ;; IDEA: mo¿na u¿yæ minor-mode-key-binding do sprawdzenia
	     ;; w jakim trybie zosta³a zdefiniowana spacja.
	     )))

d527 4
a530 1
(defvar tex-magic-space-mode-map (make-sparse-keymap)
a531 2

(define-key tex-magic-space-mode-map " " 'tex-magic-space)
@


1.25.4.1
log
@Ga³±¼ ta ma s³u¿yæ rozwojowi polecenia tex-toggle-magic-space.
@
text
@d9 3
a11 3
;; Version: 	2.4.3-toggle-1
;; RCS version:	$Revision: 1.25 $
;; Date: 	$Date: 2002/12/10 22:33:53 $
d19 1
a19 1
;; $Id: sierotki.el,v 1.25 2002/12/10 22:33:53 jnareb Exp jnareb $
@


1.25.2.1
log
@Usuniêto tex-toggle-magic-space i odniesienia do niego.

Ga³±¿ ta ma s³u¿yæ rozwojowi wielu odrêbnych porad.
@
text
@d9 3
a11 3
;; Version: 	2.4.3-multiadvice-1
;; RCS version:	$Revision: 1.25 $
;; Date: 	$Date: 2002/12/10 22:33:53 $
d19 1
a19 1
;; $Id: sierotki.el,v 1.25 2002/12/10 22:33:53 jnareb Exp jnareb $
d79 1
d121 1
d211 2
a212 1
For on-the-fly 'tildification' turn on TeX Magic Space minor mode using
d266 3
a268 2
To use it turn on TeX Magic Space minor mode using command 
`tex-magic-space-mode' (\\[tex-magic-space-mode]).
d544 50
@


1.24
log
@Poprawione (uaktualnione) komentarze w nag³ówku; czê¶æ komentarzy
przeniesiona z nag³ówka do okolic funkcji których dotycz±.  Dodana
sekcja "To do:" w której jest by³a zawarto¶æ "Notes:" (w nich z kolei
bêd± zapewne informacje o wydajno¶ci).

Rozszerzone docstring.  Przeniesione (eval-when-compile (require 'texmathp)).
Dodane komentarze.

(tex-magic-space-toggle-checking): Dodana informacja o aktywowaniu
porad gdy tex-magic-space-mode jest nieaktywne, a zatem nie widaæ
zmian w modeline.

(tex-toggle-magic-space): Do wypisania jak± komendê uruchamia `SPC'
dodano informacjê o tym, do czego jest `SPC' przypisana w lokalnej
mapie klawiatury (przy spewnieniu pewnych warunków).
@
text
@d9 3
a11 3
;; Version: 	2.4.2
;; RCS version:	$Revision: 1.23 $
;; Date: 	$Date: 2002/11/27 12:07:57 $
d19 1
a19 1
;; $Id: sierotki.el,v 1.23 2002/11/27 12:07:57 jnareb Exp jnareb $
d289 5
a293 1
;;    u¿ytkownika, a la `tildify-ignored-environments-alist'
d459 14
a472 1
(defvar tex-magic-space-checking-string (ad-is-active 'tex-magic-space)
d523 1
a523 1
;; see also: `ad-is-active', `ad-is-advised', `ad-has-enabled-advice',
d526 19
d591 2
d713 2
a714 1
;; Space mode, tzn. w `tex-magic-space-mode-map'
d717 1
@


1.23
log
@Nag³ówek: dodanie "convenience" do "Keywords:", stworzenie nowej sekcji
"Installation:" (obecnie przed "Commentary:") i przeniesienie tam informacji
o instalowaniu sierotki.el.  Zamiana ";;;" na ";;" w tre¶ci sekcji.
Dodatkowe odstêpy.

Dodanie "Local variables:" na koñcu.

(tex-magic-space-facep): Zmiana nazwy na tex-magic-space-face.
(tex-magic-space-toggle-checking): Zmiana delimitera z "/" na ":".
(tex-toggle-magic-space): Rozpisanie describe-key-briefly (nie daje siê
  u¿ywaæ w elispie; podwójne wypisywanie wyników).
@
text
@d9 3
a11 3
;; Version: 	2.4.1
;; RCS version:	$Revision: 1.22 $
;; Date: 	$Date: 2002/11/26 14:10:02 $
d19 1
a19 1
;; $Id: sierotki.el,v 1.22 2002/11/26 14:10:02 jnareb Exp jnareb $
d83 2
d87 3
a89 1
;; za pomoc± `eval-after-load'.
d96 7
d104 14
a117 36
;;        (i szybk±) lub skomplikowan± (i mog±c± wiêcej).
;; TO DO: Zrobiæ wolniejsz± wersjê `tex-magic-space', która bêdzie
;;        np. sprawdza³a czy jeste¶my w trybie matematycznym tak jak
;;        `TeX-insert-dollar' za pomoc± `texmathp' z AUCTeX-a.
;;
;; IDEA: `texmathp' jest dostêpne tylko w AUC TeX-u (standardowe tex-mode.el
;; dostêpne z Emacsem nie zawiera AFAIK podobnego makra).  Jest ono
;; zdefiniowane w texmathp, autoloaded.  Chcemy by `tex-magic-space' dzia³a³o
;; zarówno w standardowym `tex-mode'/`latex-mode', jak i w AUC TeX-owym
;; `TeX-mode'/`LaTeX-mode', przy czym w tym drugim chcemy mieæ mo¿liwo¶æ
;; skorzystania z `texmathp' , w tym pierwszym ewentualnie sprawdzaæ (podobnie
;; jak w `comment-beginning') czy u¿ywamy `tex-math-face' co siê sprawdza
;; przynajmniej w $$ ... $$ i $ ... $.  Mo¿na by to zrobiæ u¿ywaj±c porady
;; (advice) i dodaj±c aktywacjê/deaktywacjê tej porady do
;; `TeX-mode-hook'/`LaTeX-mode-hook' (w ka¿dym razie próbuj±c j± aktywowaæ przy
;; w³±czaniu odpowiedniego trybu, deaktywuj±c przy jego wy³±czaniu; np. za
;; pomoc± `eval-after-load').  Funkcja która by aktywowa³a/deaktywowa³a poradê
;; powinna u¿ywaæ `featurep' by sprawdziæ, czy zosta³ za³adowany AUCTeX
;; (tex-site, latex, tex; texmathp.el nie dostarcza ¿adnej cechy (feature));
;; lub `require' z parametrem NOERROR, sprawdzaj±c czy uda³o siê za³adowaæ
;; plik.  Ewentualnie mo¿na by u¿ywaæ `texmathp' (które jest automatycznie
;; ³adowane je¶li AUCTeX jest zainstalowany) wewn±trz "pu³apki"
;; `condition-case' lub `unwind-protect', z czego oba rozwi±zania umo¿liwiaj±
;; skorzystanie ze sprawdzania `tex-math-face' je¶li `texmathp' jest
;; niedostêpne.
;;
;; PRZYK£AD (testowy):
;; (defun test-math ()
;;   (interactive)
;;   (condition-case err
;;       (and (texmathp)
;; 	   (message "Why: %s" (princ texmathp-why))
;; 	   (message "Face: %s" (princ (get-text-property (point) 'face))))
;;     ;; This is the handler; it is not a form
;;     (error (princ (format "The error was: %s\n" err))
;; 	   nil)))
a118 6
;; UWAGA: Ró¿ne pliki ró¿nie definiuj± font (face) dla trybu matematycznego:
;; * AUCTeX: font-latex.el:  font-latex-math-face (LaTeX math expressions)
;; * AUCTeX: hilit-LaTeX.el: w³asne funkcje, u¿ywa hilit19
;; * AUCTeX: tex-font.el:    tex-math-face (TeX math expressions)
;; * Emacs:  tex-mode.el:    tex-math-face (TeX math expressions)
;; ale mo¿na u¿ywaæ `tex-math-face'.
a119 6
;; Mo¿na tak¿e sprawdzaæ czy jeste¶my w komentarzu u¿ywaj±c kodu jak w
;; `comment-beginning', t.j. sprawdzaj±c czy u¿ywamy `font-lock-comment-face'
;; i ewentualnie szukaj±c znaku komentarza `%' w bie¿±cej linii na lewo od
;; bie¿±cej pozycji (`point').


d122 2
a123 1

a280 1
(eval-when-compile (require 'texmathp))
d283 1
a283 1
;;        bêdzie podawa³o czemu magiczna spacja jest nieaktywna.
d298 47
d347 4
a350 1
  "Inactive in math mode as defined by `texmathp'."
d369 13
d501 4
a504 1
  (force-mode-line-update))
d532 2
a533 1
  (progn			        ; u¿ywane tylko by wypisaæ komunikat
d544 3
a546 1
    (message "%s runs the command %s"
d548 8
a555 1
	     (key-binding " "))))
@


1.22
log
@Dodane dodatkowe pola (URL, Compatibility, Incompatibility) w
nag³ówku.  Dodane komentarze (IDEE, TO DO).  Poprawione docstrings.

Dodanie (featurep 'sierotki) do inicjalizacji (wy³±czania (disable))
porad.

(tex-magic-space-user-form): Definiowalne przez u¿ytkownika.

Inicjalizacja: opakowanie dodawania do haczyków w makro
tex-magic-space-mode-initialize, u¿ywajace zmiennej
tex-magic-space-mode-hooks-list.
@
text
@d9 4
a12 4
;; Version: 	2.4.0
;; RCS version:	$Revision: 1.21 $
;; Date: 	$Date: 2002/11/26 00:09:20 $
;; Keywords: 	TeX, wp
d19 1
a19 1
;; $Id: sierotki.el,v 1.21 2002/11/26 00:09:20 jnareb Exp jnareb $
a39 1
;;; Commentary:
d41 18
a58 1
;;; Umie¶æ nastêpuj±c± linijkê w swoim pliku .emacs
d60 1
a60 1
;; (require 'sierotki)
d62 24
a85 24
;;; Ten pakiet s³u¿y do dowi±zywania zdefiniowanych wyrazów (domy¶lnie
;;; jednoliterowych spójników) do nastêpuj±cych po nich s³ów za pomoc± znaku
;;; `~' (tyldy), nie³amliwej spacji TeX-owej.  S³u¿y to temu, aby w
;;; dokumentach TeX-owych unikn±æ jednoliterowych spójników na koñcach linii,
;;; co jest wymagane przez polskie (i czeskie) regu³y typograficzne.
;;;
;;; Pakiet ten dostarcza dwu funkcjonalno¶ci.  Pierwsz± z nich jest
;;; sprawdzenie (istniej±cego) tekstu i zasugerowanie dodania brakuj±cych
;;; tyld.  Jest ona implementowana przez komendê `tex-hard-spaces', za pomoc±
;;; `query-replace-regexp'.  Tê sam± (a nawet rozszerzon±) funkcjonalno¶æ
;;; znale¼æ mo¿na w pakiecie `tildify' (UWAGA: domy¶lne ustawienia w tym
;;; pakiecie s± dostosowane do jêzyka czeskiego).
;;;
;;; Drug± z funkcjonalno¶ci jest automatyczne wpisywanie tyld po
;;; jednoliterowych spójnikach podczas pisania tekstu (w locie).  Jest
;;; ona implementowana przez komendê `tex-magic-space', któr± nale¿y
;;; podpi±æ do spacji.  Do aktywowania tej funkcjonalno¶ci mo¿na u¿yæ
;;; `tex-toggle-magic-space', albo (co jest bezpieczniejsze)
;;; `tex-magic-space-mode'.  Tryb (minor mode) TeX Magic Space mo¿na
;;; aktualnie w³±czyæ z modeline dla trybów g³ównych (major mode)
;;; `latex-mode' lub `tex-mode'; jest on oznaczany za pomoc± " ~".
;;;
;;; Funkcjonalno¶æ ta jest automatycznie w³±czana w trybach TeX-owych
;;; za pomoc± `eval-after-load'.
d87 1
a87 1
;;; Dokumentacja i komentarze: Jakub Narêbski.
d92 49
a140 49
;;; TO DO: Ulepszyæ wyra¿enie regularne b±d¼ daæ do wyboru wersjê prost±
;;;        (i szybk±) lub skomplikowan± (i mog±c± wiêcej).
;;; TO DO: Zrobiæ wolniejsz± wersjê `tex-magic-space', która bêdzie
;;;        np. sprawdza³a czy jeste¶my w trybie matematycznym tak jak
;;;        `TeX-insert-dollar' za pomoc± `texmathp' z AUCTeX-a.
;;;
;;; IDEA: `texmathp' jest dostêpne tylko w AUC TeX-u (standardowe tex-mode.el
;;; dostêpne z Emacsem nie zawiera AFAIK podobnego makra).  Jest ono
;;; zdefiniowane w texmathp, autoloaded.  Chcemy by `tex-magic-space' dzia³a³o
;;; zarówno w standardowym `tex-mode'/`latex-mode', jak i w AUC TeX-owym
;;; `TeX-mode'/`LaTeX-mode', przy czym w tym drugim chcemy mieæ mo¿liwo¶æ
;;; skorzystania z `texmathp' , w tym pierwszym ewentualnie sprawdzaæ (podobnie
;;; jak w `comment-beginning') czy u¿ywamy `tex-math-face' co siê sprawdza
;;; przynajmniej w $$ ... $$ i $ ... $.  Mo¿na by to zrobiæ u¿ywaj±c porady
;;; (advice) i dodaj±c aktywacjê/deaktywacjê tej porady do
;;; `TeX-mode-hook'/`LaTeX-mode-hook' (w ka¿dym razie próbuj±c j± aktywowaæ przy
;;; w³±czaniu odpowiedniego trybu, deaktywuj±c przy jego wy³±czaniu; np. za
;;; pomoc± `eval-after-load').  Funkcja która by aktywowa³a/deaktywowa³a poradê
;;; powinna u¿ywaæ `featurep' by sprawdziæ, czy zosta³ za³adowany AUCTeX
;;; (tex-site, latex, tex; texmathp.el nie dostarcza ¿adnej cechy (feature));
;;; lub `require' z parametrem NOERROR, sprawdzaj±c czy uda³o siê za³adowaæ
;;; plik.  Ewentualnie mo¿na by u¿ywaæ `texmathp' (które jest automatycznie
;;; ³adowane je¶li AUCTeX jest zainstalowany) wewn±trz "pu³apki"
;;; `condition-case' lub `unwind-protect', z czego oba rozwi±zania umo¿liwiaj±
;;; skorzystanie ze sprawdzania `tex-math-face' je¶li `texmathp' jest
;;; niedostêpne.
;;;
;;; PRZYK£AD (testowy):
;;; (defun test-math ()
;;;   (interactive)
;;;   (condition-case err
;;;       (and (texmathp)
;;; 	   (message "Why: %s" (princ texmathp-why))
;;; 	   (message "Face: %s" (princ (get-text-property (point) 'face))))
;;;     ;; This is the handler; it is not a form
;;;     (error (princ (format "The error was: %s\n" err))
;;; 	   nil)))
;;;
;;; UWAGA: Ró¿ne pliki ró¿nie definiuj± font (face) dla trybu matematycznego:
;;; * AUCTeX: font-latex.el:  font-latex-math-face (LaTeX math expressions)
;;; * AUCTeX: hilit-LaTeX.el: w³asne funkcje, u¿ywa hilit19
;;; * AUCTeX: tex-font.el:    tex-math-face (TeX math expressions)
;;; * Emacs:  tex-mode.el:    tex-math-face (TeX math expressions)
;;; ale mo¿na u¿ywaæ `tex-math-face'.
;;;
;;; Mo¿na tak¿e sprawdzaæ czy jeste¶my w komentarzu u¿ywaj±c kodu jak w
;;; `comment-beginning', t.j. sprawdzaj±c czy u¿ywamy `font-lock-comment-face'
;;; i ewentualnie szukaj±c znaku komentarza `%' w bie¿±cej linii na lewo od
;;; bie¿±cej pozycji (`point').
d143 2
a144 2
;;; Ponadto dokumentacja po angielsku (zw³aszcza docstrings) wymaga poprawienia.
;;; `tex-toggle-magic-space' dzia³a w dowolnym trybie (patrz komentarz).
d149 38
a186 38
;;; Kod `tex-hard-spaces' pojawi³ siê po raz pierwszy w:

;;; From: rysiek@@IPIPAN.GDA.PL (Ryszard Kubiak)
;;; Newsgroups: pl.comp.dtp.tex.gust
;;; Subject: Re: tylda do samotnych
;;; Date: 25 Oct 1999 21:12:54 GMT

;;; Wpisywanie tyld "w locie", tzn `tex-magic-space' pojawi³o siê w:

;;; From: Michal Jankowski <michalj@@fuw.edu.pl>
;;; Newsgroups: pl.comp.dtp.tex
;;; Subject: Dowiazywanie samotnich literek do nastepnego slowa.
;;; Date: 03 Nov 1999 12:45:22 +0100

;;; Nastêpnie wyra¿enia regularne w obu funkcjach by³y sukcesywnie
;;; poprawiane.  W wyniku do¶wiadczeñ z u¿ywania `tex-magic-space' przy
;;; pisaniu tekstów z du¿± ilo¶ci± matematyki zosta³o napisane
;;; `tex-toggle-magic-space'.  Nastêpnie zosta³ zg³oszony b³±d w wyra¿eniu
;;; regularnym w `tex-magic-space', a w wyniku dyskusji powsta³a obecna
;;; wersja `tex-magic-space', u¿ywaj±ca zmiennej `last-command-char'
;;; i funkcji `self-insert-command'

;;; From: Michal Jankowski <Michal.Jankowski@@fuw.edu.pl>
;;; Subject: Re: Test sierotek
;;; Date: 30 Oct 2001 13:02:16 +0100

;;; W wyniku porównania z inn± implementacj± magicznej spacji (`spacja')
;;; z artyku³u "GNU Emacs Lisp" rzyjontka na debian.otwarte.pl
;;; http://debian.otwarte.pl/article.php?aid=39
;;; (w szczególno¶ci innego jej zachowania) powsta³o pytanie o to, jakie
;;; w³asno¶ci powinno mieæ `tex-magic-space'

;;; From: "Jakub Narêbski" <jnareb@@fuw.edu.pl>
;;; Subject: RFC: sierotki.el
;;; Newsgroups: pl.comp.dtp.tex
;;; Date: 14 Nov 2002 14:13:26 GMT

;;; Dyskusja trwa...
d351 1
a351 1
Used in advice `tex-magic-space-facep'")
d367 1
a367 1
  (around tex-magic-space-facep (&optional prefix) preactivate)
d377 1
a377 1
;; `tex-magic-space-facep' i dodajemy jej automatyczne w³±czanie do haków
d382 1
a382 1
  (ad-disable-advice 'tex-magic-space 'around 'tex-magic-space-facep)
d385 1
a385 1
					   'tex-magic-space-facep)))
d388 1
a388 1
					   'tex-magic-space-facep))))
d430 1
a430 1
See also: `tex-magic-space-texmathp', `tex-magic-space-facep',
d450 1
a450 1
	   "/"
d455 1
a455 1
		(ad-find-advice 'tex-magic-space 'around 'tex-magic-space-facep))
d500 3
a502 1
    (describe-key-briefly " ")))
d667 3
d671 4
@


1.21
log
@(tex-magic-space-texmathp): Usunieto wypisywanie informacji debugguj±cych.
(tex-magic-space-face-list, tex-magic-space-facep): Dodane.
(tex-magic-space-user-form): Dodane.

(tex-magic-space-toggle-texmathp): Nazwa zmieniona na
  tex-magic-space-toggle-checking, wy³±czenie wypisywania informacji
  debugguj±cych, dodana obs³uga tex-magic-space-user-form i
  zmienionego opisu minor mode t.j. tex-magic-space-checking-string.

(tex-toggle-magic-space): Autoload.

Dodana inicjalizacja (w³±czenie/wy³±czenie (enable/disable)) porad.
Ulepszona informacja o minor mode w modeline: pad³o minor mode menu.
Do inicjalizacji dodanie przypisania tex-magic-space-toggle-checking
do `C-c @@' (`C-c ~' jest zajête przez LaTeX-math-mode).


(nonempty-intersection): Pierwsza wersja.
@
text
@d9 4
a12 4
;; Version: 	2.4-rc1
;; RCS version:	$Revision: 1.20 $
;; Date: 	$Date: 2002/11/21 02:48:38 $
;; Keywords: 	tex, wp
d14 4
d19 1
a19 1
;; $Id: sierotki.el,v 1.20 2002/11/21 02:48:38 jnareb Exp jnareb $
d76 2
d177 1
a177 1
;; Version 2.4 (RCS revision 1.21):
d216 4
a219 2
For on-the-fly 'orphans' elimination bind SPC to `tex-magic-space'
using \\[tex-toggle-magic-space].
d257 1
d270 3
a272 1
Bind it to space using \\[local-set-key] SPC tex-magic-space
d289 2
d293 8
a300 3
;; b. sprawdzanie czy font (face) nale¿y do okre¶lonej listy
;; c. zdefiniowana przez u¿ytkownika FORM (np. '(and FORM FORM))
;; Ad b. `memq' (u¿ywa `eq') i `member' z cl (u¿ywa `equal'); je¶li w³asno¶æ
d303 2
a304 1
;; `intersection' z pakietu CL (Common Lisp)
d319 2
a320 1
(unless (or (fboundp 'texmathp) (featurep 'texmathp))
d333 3
a335 1
* font-latex-sedate-face: Face to use for LaTeX minor keywords.")
d363 2
a364 1
(unless (or (and (boundp 'global-font-lock-mode) global-font-lock-mode)
d376 6
a381 2
  "User defined form when `tex-magic-space' should be inactive.
Set it before loading sierotki.el.")
d400 4
a403 1
  "Non-nil if advices for `tex-magic-space' are active.")
d408 8
a415 1
otherwise deactivate it.  Uses advice `tex-magic-space-texmathp'."
d468 4
a471 1
they do not use one common keymap)."
d603 2
d628 15
a642 8
;; For AUC TeX (zapewne wystarczy 'TeX-mode-hook)
(tex-magic-space-mode-add-to-hook 'TeX-mode-hook)
(tex-magic-space-mode-add-to-hook 'LaTeX-mode-hook)
;; For tex-mode included in Emacs
(tex-magic-space-mode-add-to-hook 'tex-mode-hook)
;; For RefTeX
;; NOTE: W tej wersji jest to ca³kowicie bezpieczne
(tex-magic-space-mode-add-to-hook 'reftex-mode-hook)
@


1.20
log
@Pozbycie siê eval-after-load i bezpo¶rednie u¿ycie haków
za pomoc± makra tex-magic-space-mode-add-to-hook.
@
text
@d9 3
a11 3
;; Version: 	2.4-pre3
;; RCS version:	$Revision: 1.19 $
;; Date: 	$Date: 2002/11/21 02:34:32 $
d15 1
a15 1
;; $Id: sierotki.el,v 1.19 2002/11/21 02:34:32 jnareb Exp jnareb $
d170 5
a174 5
;; * Pojawi³ siê TeX Magic Space minor mode.
;; Version 2.4
;; * Dodane porady i polecenie do ich w³±czana, aby `tex-magic-space'
;;   pozostawa³a nieaktywna tam gdzie nie trzeba (np. w trybie
;;   matematycznym wykrywanym za pomoc± `texmathp').
d291 2
a292 7
      ;; jeste¶my poza trybem metametycznym albo `texmathp' nie istnieje
      ;; TO DO: uczyniæ tê poradê domy¶lnie nieaktywn± (disabled), aktywowaæ
      ;;        j± przy ³adowaniu texmathp za pomoc± `eval-after-load'
      (prog1
	  ad-do-it
	(message "Default `tex-magic-space': '%c'" last-command-char))
    (message "Math mode detected: %s" (princ texmathp-why))
d297 79
a375 3
;; TO DO: Zmieniæ nazwê na `tex-magic-space-toggle-checking'; bêdzie wiêcej
;; porad, a poni¿sza funkcja w³±cza/wy³±cza (activate) je wszystkie.
(defun tex-magic-space-toggle-texmathp (&optional arg)
d380 7
d392 18
a409 2
  (message "Advices %sctivated."
	   (if (ad-is-active 'tex-magic-space) "a" "dea")))
d413 1
d420 1
d520 1
a520 1
      ;; `menu-enable'; 
d522 1
a522 1
;;;							          tex-mode)))
d529 4
a532 1
      (add-minor-mode 'tex-magic-space-mode " ~" tex-magic-space-mode-map))
d543 2
a544 1
	  (cons '(tex-magic-space-mode " ~")
d564 1
@


1.19
log
@U¿ycie w eval-after-load odpowiednich haków, zamiast bezpo¶redniego
w³±czania trybu "TeX Magic Space".
@
text
@d9 3
a11 3
;; Version: 	2.4-pre2
;; RCS version:	$Revision: 1.18 $
;; Date: 	$Date: 2002/11/21 02:20:19 $
d15 1
a15 1
;; $Id: sierotki.el,v 1.18 2002/11/21 02:20:19 jnareb Exp jnareb $
d155 1
a155 1
;;; http://debian.otwarte.pl/article.php?aid=39 
d169 1
a169 1
;; Version 2.3 (RCS revision 1.12): 
d278 1
a278 1
;; IDEE: 
d286 1
a286 1
(defadvice tex-magic-space 
d288 1
a288 1
  "Inactive in math mode as defined by `texmathp'"
d294 1
a294 1
      (prog1 
d314 1
a314 1
  (message "Advices %sctivated." 
d403 1
a403 1
;;;   - (WIDTH REST...), dope³nione WIDTH spacjami je¶li WIDTH > 0, skrócony 
d438 1
a438 1
;;; (list 'menu-item "TeX Magic Space" 
a480 3
;; NOTE: u¿yj drugiej wersji i operatora cytowania w eval-after-load je¶li
;;       twój Emacs nie rozumie `
;; NOTE: zapewne `eval-after-load' nie jest w ogóle potrzebne
d483 5
a487 7
  `(add-hook ,hook (function (lambda () (setq 'tex-magic-space-mode t)))))
; (add-hook hook (function (lambda () (setq 'tex-magic-space-mode t)))))
; (add-hook hook 'turn-on-tex-magic-space-mode)

;; For AUC TeX
(eval-after-load "tex"      (tex-magic-space-mode-add-to-hook 'TeX-mode-hook))
(eval-after-load "latex"    (tex-magic-space-mode-add-to-hook 'LaTeX-mode-hook))
d489 1
a489 1
(eval-after-load "tex-mode" (tex-magic-space-mode-add-to-hook 'tex-mode-hook))
d492 1
a492 1
(eval-after-load "reftex"   '(tex-magic-space-mode-add-to-hook 'reftex-mode-hook))
@


1.18
log
@Dodanie ró¿nych notatek, idei, pomys³ów w komentarzach.
@
text
@d9 3
a11 3
;; Version: 	2.4-pre1
;; RCS version:	$Revision: 1.17 $
;; Date: 	$Date: 2002/11/19 22:58:24 $
d15 1
a15 1
;; $Id: sierotki.el,v 1.17 2002/11/19 22:58:24 jnareb Exp jnareb $
d481 9
d491 2
a492 2
(eval-after-load "tex"      '(setq tex-magic-space-mode t))
(eval-after-load "latex"    '(setq tex-magic-space-mode t))
d494 1
a494 1
(eval-after-load "tex-mode" '(setq tex-magic-space-mode t))
d497 1
a497 1
(eval-after-load "reftex"   '(setq tex-magic-space-mode t))
@


1.17
log
@(tex-magic-space): Dodano poradê tex-magic-space-texmathp,
sprawdzaj±c± czy jeste¶my w trybie matematycznym za pomoc± texmathp
(najpierw sprawdza, czy texmathp jest dostêpne), i je¶li tak jest to
tex-magic-space nie jest aktywowane: wstawiana jest za pomoc±
self-insert-command spacja.

(tex-magic-space-toggle-texmathp): Dodane, aktywuje porady dla
tex-magic-space.


Wersja rozwojowa, wypisuje informacje pomocnicze.
@
text
@d10 2
a11 2
;; RCS version:	$Revision: 1.16 $
;; Date: 	$Date: 2002/11/19 13:50:03 $
d15 1
a15 1
;; $Id: sierotki.el,v 1.16 2002/11/19 13:50:03 jnareb Exp jnareb $
d278 8
d388 19
d422 8
a429 1
      ;; mode menu s± wszystkie minor mode, ten tryb jako jako "tex-magic-space-mode"
d435 7
d445 3
d464 15
@


1.16
log
@Poprawione nag³ówek, komentarze, docstring.  Napisana sekcja 'History:',
dodana sekcja 'Change Log:' (aka 'Updates:').

(tex-magic-space): Parametr PREFIX jest teraz opcjonalny.
@
text
@d5 1
a5 1
;; Author: Ryszard Kubiak        <rysiek@@ipipan.gda.pl>
d8 4
a11 4
;; Maintainer: 	Jakub Narebski <jnareb@@fuw.edu.pl>
;; Version: 	2.3.5
;; RCS version:	$Revision: 1.15 $
;; Date: 	$Date: 2002/11/18 21:12:26 $
d15 1
a15 1
;; $Id: sierotki.el,v 1.15 2002/11/18 21:12:26 jnareb Exp jnareb $
d169 6
a174 3
;;; Version 2.3 (RCS revision 1.12): 
;;  * Pojawi³ siê TeX Magic Space minor mode.

d259 1
a259 2
   the SPC following single-letter word substituted with `~'; 
   workaround: define expansion with ending `~'
d273 37
@


1.16.2.1
log
@Inicjalizacja za pomoc± `eval-after-load' zmieniona na inicjalizacjê
za pomoc± `add-hook' dla odpowiednich haków.
@
text
@d5 1
a5 1
;; Author: 	Ryszard Kubiak   <rysiek@@ipipan.gda.pl>
d9 3
a11 3
;; Version: 	2.3.5-fix1
;; RCS version:	$Revision: 1.16.2.1 $
;; Date: 	$Date: 2002/11/21 13:00:03 $
d15 1
a15 1
;; $Id: sierotki.el,v 1.16.2.1 2002/11/21 13:00:03 jnareb Exp jnareb $
d384 2
a385 4
(add-hook 'TeX-mode-hook   (function (lambda () 
				       (setq tex-magic-space-mode t))))
(add-hook 'LaTeX-mode-hook (function (lambda () 
				       (setq tex-magic-space-mode t))))
d387 1
a387 4
(add-hook 'tex-mode-hook   (function (lambda () 
				       (setq tex-magic-space-mode t))))
(add-hook 'latex-mode-hook (function (lambda () 
				       (setq tex-magic-space-mode t))))
d390 1
a390 2
(add-hook 'reftex-mode-hook (function (lambda () 
					(setq tex-magic-space-mode t))))
@


1.15
log
@Nieco zmieniona inicjalizacja dla TeX Magic Space mode (z powrotem
wy³±cznie (fboundp 'add-minor-mode).  Dodano parê komentarzy
n.t. dzia³ania inicjalizacji dla TeX Magic Space mode.
@
text
@d9 3
a11 3
;; Version: 	2.3.4
;; RCS version:	$Revision: 1.14 $
;; Date: 	$Date: 2002/11/18 20:40:03 $
d15 1
a15 1
;; $Id: sierotki.el,v 1.14 2002/11/18 20:40:03 jnareb Exp jnareb $
d47 1
a47 1

d54 1
a54 1

d77 3
a79 3
;;; dostêpne z Emacsem nie zawiera AFAIK podobnego makra).  Jest ono zdefiniowane
;;; w texmathp, autoloaded.  Chcemy by `tex-magic-space' dzia³a³o zarówno w
;;; standardowym `tex-mode'/`latex-mode', jak i w AUC TeX-owym
d89 7
a95 6
;;; (tex-site, latex, tex; texmathp.el nie dostarcza ¿adnej cechy (feature)); lub
;;; `require' z parametrem NOERROR, sprawdzaj±c czy uda³o siê za³adowaæ plik.
;;; Ewentualnie mo¿na by u¿ywaæ `texmathp' (które jest automatycznie ³adowane
;;; je¶li AUCTeX jest zainstalowany) wewn±trz "pu³apki" `condition-case' lub
;;; `unwind-protect', z czego oba rozwi±zania umo¿liwiaj± skorzystanie ze
;;; sprawdzania `tex-math-face' je¶li `texmathp' jest niedostêpne.
d127 46
d199 1
a199 1
  "Replaces whitespace characters after single-letter word with `~'.
d231 3
a233 2
`tex-magic-space' inserts `~' if this expression matches two characters before point,
otherwise it inserts the key it is bound to (\\[tex-magic-space]), usually SPC.
d236 2
a237 2
single letter conjunction against the letter directly before the point.
The part before [aeiouwzAEIOUWZ] should match word beginning/boundary.
d242 1
a242 1
(defun tex-magic-space (prefix)
d245 1
a245 1
  "Magic-space - inserts non-breakable space after a single-letter word.
d253 2
d256 2
a257 1
   the SPC following single-letter word substituted with `~'
d260 2
a261 1
or `tex-toggle-magic-space' (\\[tex-toggle-magic-space]).
d264 1
a264 1
  (interactive "p")	                ; Prefix arg jako liczba.  Nie robi I/O.
d266 1
a266 1
	 tex-magic-space-regexp	        ; wyra¿enie rozpoznaj±ce samotne spójniki
d268 2
a269 2
    (setq last-command-char ?~))	; wstawiamy `~' zamiast SPC
  (self-insert-command prefix))	        ; daje obs³ugê auto-fill, abbrev, blinkin-paren
d277 1
a277 2
;; (przydatne przy pisaniu matematyki), [tylko dla trybów LaTeX-owych]
;; TO DO: Zrobiæ z tego minor mode.
d305 1
a305 1
;;;; `tex-magic-space-mode': TeX Magic Space as buffer local minor mode
d307 2
a308 1
  "Determines if TeX Magic Space mode is active.")
a325 1

d327 1
a327 2
In this (buffer local) mode `\\[tex-magic-space]' runs the command
`tex-magic-space'."
d329 1
a329 1
;;;  (setq tex-magic-space-mode 		
d332 2
a333 1
  (setq tex-magic-space-mode 
d336 2
a339 2
;;; something like this was found in reftex
(if (fboundp 'add-minor-mode) 
d341 5
a345 2
    ;; In Emacs this is XEmacs compatibility function (?) defined in subr.
    ;; Use it so that we get the extras i.e. mode-line minor mode menu
d347 10
a356 8
      ;; This should make "TeX Magic Space" entry appear only for buffers in
      ;; LaTeX-mode or TeX-mode as its major mode; but it doesn't work in Emacs 21.2.1
      ;; neither with "`(memq ...)" like in reftex-mode (for all modes) 
      ;; nor with "(memq ...)", i.e. unquoted, like in ada-mode (for no modes).
      ;; add-minor-mode tests :included property simply with (get FOO :included).
      ;; Neither :included nor :menu-tag property doesn't seem to work for XEmacs 21.4.6;
      ;; it simply lists all (?) available minor modes
      (put 'tex-magic-space-mode :included '(memq major-mode '(latex-mode tex-mode)))
d358 2
a359 3
      ;; IDEA: tooltip, toggle magic space as toggle read only in modeline
      ;; :help-echo property, :local-map for toggle, maybe :display, :*face
      ;; via propertize function (but try to use :face instead of 'face)
d361 1
a361 2

  ;; The standard way
d363 2
a364 2
    (setq minor-mode-alist 
	  (cons '(tex-magic-space-mode " ~") 
d367 2
a368 2
    (setq minor-mode-map-alist 
	  (cons (cons 'tex-magic-space-mode tex-magic-space-mode-map) 
d378 3
a380 2
;; Globally bind TeX Magic Space mode to `C-c SPC'
(define-key mode-specific-map " " 'tex-magic-space-mode) ; C-c SPC
d382 1
a382 1
;; Turn on TeX Magic Space for known (La)TeX modes (at loading)
@


1.14
log
@Dodano parê komentarzy n.t. dzia³ania inicjalizacji dla TeX Magic Space mode.
@
text
@d9 3
a11 3
;; Version: 	2.3.3
;; RCS version:	$Revision: 1.13 $
;; Date: 	$Date: 2002/11/18 20:21:47 $
d15 1
a15 1
;; $Id: sierotki.el,v 1.13 2002/11/18 20:21:47 jnareb Exp jnareb $
d288 1
a288 5
(if (or 
     ;; in FSF Emacs `add-minor-mode' is defined in file `easy-mmode'
     (featurep 'easy-mmode)     
     ;; in XEmacs it is defined in `modeline', which doesn't do `provide'
     (fboundp 'add-minor-mode)) 
d290 1
a290 1
    ;; In Emacs this is XEmacs compatibility function.
d294 6
a299 2
      ;; LaTeX-mode or TeX-mode as its major mode; but it doesn't work in Emacs
      ;; Neither :included nor :menu-tag property doesn't work for XEmacs 21.4.6
@


1.13
log
@Usuniêto Adama Przepiórkowskiego z listy autorów (twierdzi, ¿e jego
wk³ad pracy jest nieznacz±cy w porównaniu z reszt±).

Usuniêto star± wersjê inicjalizacji.
@
text
@d9 3
a11 3
;; Version: 	2.3.2
;; RCS version:	$Revision: 1.12 $
;; Date: 	$Date: 2002/11/18 20:13:45 $
d15 1
a15 1
;; $Id: sierotki.el,v 1.12 2002/11/18 20:13:45 jnareb Exp jnareb $
d297 3
d304 1
@


1.12
log
@Dodanie TeX Magic Space minor mode: zmienna lokalna dla bufora
`tex-magic-space-mode', komenda `tex-magic-space-mode' do prze³±czania
trybu, oraz `turn-on-tex-magic-space-mode' do bezwarunkowego w³±czenia
trybu.  Na podstawie implementacji `reftex-mode' w reftex.el;
zmieniono inicjalizacjê zmiennych dotycz±cych minor mode w wersji
standardowej (";; The standard way") na zgodn± z przyk³adem
w dokumentacji do Emacs Lispa.

Dodano inicjalizacjê dla AUCTeX-a, Emacsowego tex-mode i RefTeX-a za
pomoc± TeX Magic Space mode: przy ³adowaniu tych¿e domy¶lnie w³±czany
jest TeX Magic Space minor mode za pomoc± (setq tex-magic-space-mode t).
Poprzednia wersja, u¿ywaj±ca `tex-toggle-magic-space', zosta³a
wykomentowana.


Drobne zmiany w nag³ówku (a la folding.el).  Adam P. = Adam Przepiórkowski.
@
text
@d5 1
a5 1
;; Author: 	Ryszard Kubiak <rysiek@@ipipan.gda.pl>
d7 1
a7 2
;;		Jakub Narêbski <jnareb@@fuw.edu.pl>
;;		Adam Przepiórkowski <adamp_at@@at_ipipan.waw.pl>
d9 3
a11 3
;; Version: 	2.3.1
;; RCS version:	$Revision: $
;; Date: 	$Date: $
d15 1
a15 1
;; $Id: sierotki.el,v 1.11 2002/11/15 10:32:01 jnareb Exp jnareb $
d55 11
a65 6
;;; Drug± z funkcjonalno¶ci jest automatyczne, wpisywanie tyld po
;;; jednoliterowych spójnikach podczas pisania tekstu (w locie).  Jest ona
;;; implementowana przez komendê `tex-magic-space', któr± nale¿y podpi±æ do
;;; spacji.  Do aktywowania tej funkcjonalno¶ci mo¿na u¿yæ
;;; `tex-toggle-magic-space'.  Funkcjonalno¶æ ta jest automatycznie w³±czana w
;;; trybach TeX-owych za pomoc± `eval-after-load'.
d115 2
a116 2
;;; `comment-beginning', t.j. sprawdzaj±c czy u¿ywamy `font-lock-comment-face' i
;;; ewentualnie szukaj±c znaku komentarza `%' w bie¿±cej linii na lewo od
a319 21
;;;{{{ Old version
;; `C-c SPC' toggles magic space:
;; `mode-specific-map' is keymap for characters following C-c
;; Sequences consisting of `C-c' followed by any punctuation character
;; other than `{', `}', `<', `>', `:', `;' are allocated for minor modes.
;(define-key mode-specific-map " " 'tex-toggle-magic-space) ; C-c SPC

;;; Przypisz SPC do `tex-magic-space' w odpowiednich trybach u¿ywaj±c `eval-after-load'
;; For AUC TeX
;(eval-after-load "tex"      '(define-key TeX-mode-map    " " 'tex-magic-space))
;(eval-after-load "latex"    '(define-key LaTeX-mode-map  " " 'tex-magic-space))
;; For tex-mode included in Emacs
;(eval-after-load "tex-mode" '(define-key tex-mode-map    " " 'tex-magic-space))
;; For RefTeX
;; NOTE: RefTeX to minor mode, keymap zas³ania lokalny keymap
;; (np. LaTeX-mode-keymap) i aby `tex-toggle-magic-space' dzia³a³o trzeba by
;; jawnie u¿ywaæ `reftex-mode-map', a nie wiadomo czy RefTeX zosta³ za³adowany
;; Poni¿szy kawa³ek kodu powinien pozostaæ zakomentowany.
;;(eval-after-load "reftex"   '(define-key reftex-mode-map " " 'tex-magic-space))
;;;}}}

d322 1
d333 3
@


1.11
log
@Zmiany w komentarzach.  Dodane wyja¶nienie po co jest ten tryb
(m. in. na podstawie dokumentacji pakietu tildify).

Usuniête spacje na koñcach linii.

TO DO: History:
@
text
@d3 1
a3 1
;; Copyright (C) 2002  Michal Jankowski, Jakub Narebski
d5 10
a14 8
;; Author: Ryszard Kubiak <rysiek@@ipipan.gda.pl>
;;	Michal Jankowski <michalj@@fuw.edu.pl>
;;	Jakub Narebski <jnareb@@fuw.edu.pl>
;;	Adam P. <adamp_at@@at_ipipan.waw.pl>
;; Maintainer: Jakub Narebski <jnareb@@fuw.edu.pl>
;; Version: 2.2
;; Keywords: tex, wp
;; Created: 03-11-1999
d16 1
a16 1
;; $Id: sierotki.el,v 1.10 2002/11/15 02:49:48 jnareb Exp jnareb $
d18 1
a18 1
;; Copyright (C) 2002  Michal Jankowski, Jakub Narebski
d35 1
d250 61
d314 1
a314 1
;;; and Adam P. <adamp_at@@at_ipipan.waw.pl>
d316 1
d321 1
a321 2
(define-key  mode-specific-map " " 'tex-toggle-magic-space) ; C-c SPC

d325 2
a326 2
(eval-after-load "tex"      '(define-key TeX-mode-map    " " 'tex-magic-space))
(eval-after-load "latex"    '(define-key LaTeX-mode-map  " " 'tex-magic-space))
d328 1
a328 1
(eval-after-load "tex-mode" '(define-key tex-mode-map    " " 'tex-magic-space))
d333 15
a347 1
;(eval-after-load "reftex"   '(define-key reftex-mode-map " " 'tex-magic-space))
d350 1
a350 3
;; (load "sierotki")
;; jak i
;; (requires 'sierotki)
@


1.10
log
@tex-toggle-magic-space: Znacznie uproszczone; gdy podano prefix
  niczego nie sprawdza tylko w³±cza/wy³±cza tex-magic-space.  Obecnie
  dzia³a w lokalnej mapie (jak w wersji 1.3).

Usuniêto przypisanie " " do tex-magic-space w reftex-mode-map, jako ¿e
jest to mapa dla minor mode, zas³ania mapê lokaln± (dla major mode,
np. LaTeX-mode-map) i globaln±; patrz komentarz.
@
text
@d5 2
a6 1
;; Author: Michal Jankowski <michalj@@fuw.edu.pl>
d14 1
a14 1
;; $Id: sierotki.el,v 1.9 2002/11/15 02:08:28 jnareb Exp jnareb $
d17 1
a17 1
     
d22 1
a22 1
          
d27 1
a27 1
          
d33 1
d36 1
a36 1
;;; Put the following line in your .emacs file
d40 19
a58 5
;;; This file defines only two variables and three functions. 
;;; Heavily documented by Jakub Narêbski.


;;; Commentary[pl]:
a59 5
;;; Umie¶æ nastêpuj±c± linijkê w swoim pliku .emacs

;; (require 'sierotki)

;;; Ten plik/pakiet definiuje tylko dwie zmienne i trzy funkcje.
d63 1
a63 1
;;; Notes[pl]:
d87 1
a87 1
;;; sprawdzania `tex-math-face' je¶li `texmathp' jest niedostêpne.  
d114 2
a115 1
;;;`tex-toggle-magic-space' dzia³a w dowolnym trybie (patrz komentarz).
d117 1
d132 1
a132 1
  ;; Pierwsza linia dokumentacji jest zbyt d³uga: 
d135 1
a135 1
The part of regular expression which matches string to be saved 
d143 1
a143 1
  ;; Pierwsza linia dokumentacji 
d152 2
a153 2
single-letter conjunctions at the end of the line (known as 'orphans'). 
For on-the-fly 'orphans' elimination bind SPC to `tex-magic-space' 
d171 1
a171 1
;; TO DO: U¿yæ `defcustom' 
d174 1
a174 1
  ;; Pierwsza linia dokumentacji jest zbyt d³uga: 
d177 1
a177 1
`tex-magic-space' inserts `~' if this expression matches two characters before point, 
d187 2
a188 2
(defun tex-magic-space (prefix) 
  ;; Pierwsza linia dokumentacji jest zbyt d³uga: 
d190 1
a190 1
  "Magic-space - inserts non-breakable space after a single-letter word. 
d196 1
a196 1
 - doesn't do abbrev expansion if abbrev is single letter word 
d201 1
a201 1
Bind it to space using \\[local-set-key] SPC tex-magic-space 
d206 1
a206 1
  (when (string-match 
d214 1
a214 1
;;; Toggle magic space by Jakub Narêbski <jnareb@@fuw.edu.pl>, 
d222 1
a222 1
With prefix argument ARG, bind SPC to `tex-magic-space' if ARG is positive, 
d234 1
a234 1
     ((null arg)			; Brak prefiksu
d236 1
a236 1
	  (local-unset-key " ")     
d238 1
a238 1
     ((> (prefix-numeric-value arg) 0) ; Dodatni argument
d240 1
a240 1
     (t				; wpp (niedodatni argument)
d246 1
a246 1
;;;; ---------------------------------------------------------------------
d249 1
a249 1
;;; Initialization, by Jakub Narêbski <jnareb@@fuw.edu.pl> 
d252 1
a252 1
;; C-c SPC toggles magic space:
d254 1
a254 1
;; Sequences consisting of `C-c' followed by any punctuation character 
d259 1
a259 1
;;; Initialize SPC to `tex-magic-space' using eval-after-load
d271 1
a271 1
;; Aby mo¿na by³o ³adowaæ ten plik zarówno za pomoc± 
@


1.9
log
@Dodane d³ugie TODO dla tex-magic-space w sekcji "Commentary[pl]:".
@
text
@d9 1
a9 1
;; Version: 2.1.1
d13 1
a13 1
;; $Id: sierotki.el,v 1.8 2002/11/15 02:06:11 jnareb Exp jnareb $
a50 46
;; TO DO: Zrobiæ wolniejsz± wersjê `tex-magic-space', która bêdzie
;;        np. sprawdza³a czy jeste¶my w trybie matematycznym tak jak
;;        `TeX-insert-dollar' za pomoc± `texmathp' z AUCTeX-a.

;; IDEA: `texmathp' jest dostêpne tylko w AUC TeX-u (standardowe tex-mode.el
;; dostêpne z Emacsem nie zawiera AFAIK podobnego makra).  Jest ono zdefiniowane
;; w texmathp, autoloaded.  Chcemy by `tex-magic-space' dzia³a³o zarówno w
;; standardowym `tex-mode'/`latex-mode', jak i w AUC TeX-owym
;; `TeX-mode'/`LaTeX-mode', przy czym w tym drugim chcemy mieæ mo¿liwo¶æ
;; skorzystania z `texmathp' , w tym pierwszym ewentualnie sprawdzaæ (podobnie
;; jak w `comment-beginning') czy u¿ywamy `tex-math-face' co siê sprawdza
;; przynajmniej w $$ ... $$ i $ ... $.  Mo¿na by to zrobiæ u¿ywaj±c porady
;; (advice) i dodaj±c aktywacjê/deaktywacjê tej porady do
;; `TeX-mode-hook'/`LaTeX-mode-hook' (w ka¿dym razie próbuj±c j± aktywowaæ przy
;; w³±czaniu odpowiedniego trybu, deaktywuj±c przy jego wy³±czaniu; np. za
;; pomoc± `eval-after-load').  Funkcja która by aktywowa³a/deaktywowa³a poradê
;; powinna u¿ywaæ `featurep' by sprawdziæ, czy zosta³ za³adowany AUCTeX
;; (tex-site, latex, tex; texmathp.el nie dostarcza ¿adnej cechy (feature)); lub
;; `require' z parametrem NOERROR, sprawdzaj±c czy uda³o siê za³adowaæ plik.
;; Ewentualnie mo¿na by u¿ywaæ `texmathp' (które jest automatycznie ³adowane
;; je¶li AUCTeX jest zainstalowany) wewn±trz "pu³apki" `condition-case' lub
;; `unwind-protect', z czego oba rozwi±zania umo¿liwiaj± skorzystanie ze
;; sprawdzania `tex-math-face' je¶li `texmathp' jest niedostêpne.  

;; PRZYK£AD (testowy):
;; (defun test-math ()
;;   (interactive)
;;   (condition-case err
;;       (and (texmathp)
;; 	   (message "Why: %s" (princ texmathp-why))
;; 	   (message "Face: %s" (princ (get-text-property (point) 'face))))
;;     ;; This is the handler; it is not a form
;;     (error (princ (format "The error was: %s\n" err))
;; 	   nil)))

;; UWAGA: Ró¿ne pliki ró¿nie definiuj± font (face) dla trybu matematycznego:
;; * AUCTeX: font-latex.el:  font-latex-math-face (LaTeX math expressions)
;; * AUCTeX: hilit-LaTeX.el: w³asne funkcje, u¿ywa hilit19
;; * AUCTeX: tex-font.el:    tex-math-face (TeX math expressions)
;; * Emacs:  tex-mode.el:    tex-math-face (TeX math expressions)
;; ale mo¿na u¿ywaæ `tex-math-face'.

;; Mo¿na tak¿e sprawdzaæ czy jeste¶my w komentarzu u¿ywaj±c kodu jak w
;; `comment-beginning', t.j. sprawdzaj±c czy u¿ywamy `font-lock-comment-face' i
;; ewentualnie szukaj±c znaku komentarza `%' w bie¿±cej linii na lewo od
;; bie¿±cej pozycji (`point').
d52 48
a100 1
;;; Notes[pl]:
d102 2
a103 2
;;; 1. Dokumentacja po angielsku (zw³aszcza docstrings) wymaga poprawienia.
;;; 2. `tex-toggle-magic-space' dzia³a w dowolnym trybie (patrz komentarz).
d215 3
a217 3
Uses `current-local-map' or `current-local-map', so it currently works with 
any mode, not only with LaTeX modes (there are several of them and they do not
use one common keymap)."
d219 12
a230 26
  (let 
    ((keymap				; mapa która bêdziemy modyfikowaæ
      (or (current-local-map) (current-global-map)))) 
    (progn			        ; u¿ywane tylko by wypisaæ komunikat
      (cond
       ((null arg)			; Brak prefiksu
	(if (equal			
	     (lookup-key keymap " ")	; sprawdzamy czy SPC jest przypisane ju¿
	     'tex-magic-space)		; do `tex-magic-space' w keymap
;;;     Wybierz jedn± z poni¿szych mo¿liwo¶ci
;;;	    (substitute-key-definition 'tex-magic-space 'self-insert-command keymap)
;;;	    (local-unset-key " ")) ; (define-key (current-local-map) " " nil)
	    (define-key keymap " " 'self-insert-command)
	  (define-key keymap " " 'tex-magic-space)))
       ((> (prefix-numeric-value arg) 0) ; Dodatni argument
	(unless (equal 
		 (lookup-key keymap " ") ; sprawdzamy czy SPC nie jest przypisane ju¿
		 'tex-magic-space)       ; do `tex-magic-space' w keymap
	  (define-key keymap " " 'tex-magic-space)))
	(t				; wpp (niedodatni argument)
	 (when (equal 
		(lookup-key keymap " ") ; sprawdzamy czy SPC jest przypisane ju¿
		'tex-magic-space)       ; do `tex-magic-space' w keymap
	   (define-key keymap " " 'self-insert-command))))
      (message "SPC is bound to `%s'" (lookup-key keymap " "))
      (describe-key-briefly " "))))
d253 4
a256 1
(eval-after-load "reftex"   '(define-key reftex-mode-map " " 'tex-magic-space))
@


1.8
log
@Poprawione komentarze i docstring.

Bugfix.


Na podstawie wersji z roke.
@
text
@d9 1
a9 1
;; Version: 2.1
d13 1
a13 1
;; $Id: sierotki.el,v 1.7 2002/11/15 01:53:52 jnareb Exp jnareb $
d51 46
@


1.7
log
@Dodane komentarze i uzupe³nione (w tym GPL), uzupe³nione i rozszerzone
docstring.

tex-magic-space: argument ARG zmieni³ nazwê na PREFIX.

tex-toggle-magic-space: Dodana obs³uga prefiksu a la auto-fill-mode,
  z zapewne niepotrzebnymi sprawdzeniami.

Dodane (provide 'sierotki)


Na podstawie wersji z flow.
@
text
@d9 1
a9 1
;; Version: 2.0
d13 1
a13 1
;; $Id: sierotki.el,v 1.6 2002/11/15 01:35:02 jnareb Exp jnareb $
d53 1
a53 1
;;; Notes:
d55 2
a56 2
;;; Dokumentacja po angielsku (zw³aszcza docstrings) wymaga poprawienia.
;;; `tex-toggle-magic-space' dzia³a w dowolnym trybie (patrz komentarz).
d72 2
d80 2
a81 1
;; Zwyk³e `query-replace-regexp', czyli C-M-% dla odpowiednich wyra¿eñ regularnych
d83 3
a85 1
  "Replaces spaces after single-letter word with '~', the TeX non-breakable space.
d111 2
a112 1
;; TO DO: U¿yæ `defcustom'
d114 3
a116 1
 "*Regular expression which detects single [aeiouwz] for `tex-magic-space'.
d128 2
d148 1
a148 1
       (buffer-substring (max (point-min) (- (point) 2)) (point)))
d159 1
d175 1
a175 1
    (progn			        ; w¿ywane tylko by wypisaæ komunikat
d178 2
a179 2
	(if (equal 
	     (lookup-key map " ") 	; sprawdzamy czy SPC jest przypisane ju¿
d200 2
a201 2
;;; ---------------------------------------------------------------------
;;; Inicjalizacja dla zapobiegania powstawaniu sierotek 'w locie'
d210 2
a211 2
;; by Adam P. <adamp_at@@at_ipipan.waw.pl>
(define-key mode-specific-map " " 'tex-toggle-magic-space) ; C-c SPC
d217 1
a217 1
;; For tex-mode as included in Emacs
@


1.6
log
@tex-magic-space: NOWA IMPLEMENTACJA, u¿ywaj±ca self-inster-command z
  odpowiednio podmienionym/niepodmienionym ostatnim znakiem.
@
text
@d9 1
a9 1
;; Version: 2.0rc1
d13 18
a30 1
;; $Id: sierotki.el,v 1.5 2002/11/15 01:25:51 jnareb Exp jnareb $
d34 25
d100 3
d119 1
a119 3
;;; Magic space by Michal Jankowski <michalj@@fuw.edu.pl>
;;; Modified by Jakub Narêbski <jnareb@@fuw.edu.pl>
(defun tex-magic-space (arg) 
d123 8
d135 1
a135 1
  (interactive "p")
d137 1
a137 1
	 tex-magic-space-regexp
d139 3
a141 2
    (setq last-command-char ?~))
  (self-insert-command arg))
d145 1
d149 1
a149 1
(defun tex-toggle-magic-space ()
d151 2
d160 1
a160 1
  (interactive)
d162 25
a186 9
    ((map (or (current-local-map)
              (current-global-map))))
    (progn
      (if (equal (lookup-key map " ") 'tex-magic-space)
          (progn
            (define-key map " " nil)
            (local-unset-key " ")) ; to be sure
        (define-key map " " 'tex-magic-space))
    (describe-key-briefly " "))))
d210 6
@


1.5
log
@Poprawione komentarze i docstrings.
@
text
@d9 1
a9 1
;; Version: 1.3.1
d13 1
a13 1
;; $Id: sierotki.el,v 1.4 2002/11/15 01:20:19 jnareb Exp jnareb $
d76 1
a76 1
(defun tex-magic-space () 
d84 3
a86 3
  (interactive)
  (if (string-match 
       tex-magic-space-regexp
d88 2
a89 4
      (insert "~")
    (insert " ")
    (and auto-fill-function
	 (funcall auto-fill-function))))
@


1.4
log
@tex-hard-spaces: U¿ywa regexp zawartego w zmiennej tex-hard-spaces-regexp
tex-magic-space: U¿ywa regexp zawartego w zmiennej tex-magic-space-regexp

tex-toggle-magic-space: U¿ycie bie¿±cej lokalnej mapy klawiatury lub
bie¿±cej globalnej mapy.
@
text
@d9 1
a9 1
;; Version: 1.3
d13 1
a13 1
;; $Id: sierotki.el,v 1.3 2002/11/15 01:02:39 jnareb Exp jnareb $
d26 2
a27 2
;; Introduce (interactively) tilde characters (\TeX's hard-space ~)
;; after one-letter Polish articles in the entire buffer.
d38 12
a49 2
  "Replaces space after single-letter word with '~', 
the TeX non-breakable space"
d58 4
d63 7
a69 3
  "*Regular expression which detects single [aeiouwz] for `tex-magic-space'.
This regular expression should end with \\\\' to match against \"point\",
and begin with something matching against word boundary.
d71 2
a72 1
Used in comparing with part of buffer before point.")
d75 1
d77 7
a83 1
  "Magic-space - inserts non-breakable space after a single-letter word." 
d99 8
a106 2
  "Toggles TeX magic space, which inserts non-breakable space after a
single-letter word"
@


1.3
log
@tex-magic-space: Zmieniony regexp.
tex-toggle-magic-space: U¿ycie lokalnej mapy zamiast LaTeX-mode-map,
  u¿ycie describe-key-briefly do pokazania rezultatu.

Dopisana data "Created:" na podstawie zapisanego artyku³u z
pl.comp.dtp.tex, gdzie ten kod pojawi³ siê po raz pierwszy.

Dodane i zmienione komentarze.

Inicjalizacja dla RefTeX-a zmieniona z hook na eval-after-load.
@
text
@d9 1
a9 1
;; Version: 1.2
d13 1
a13 1
;; $Id: sierotki.el,v 1.2 2002/11/15 00:30:51 jnareb Exp jnareb $
d28 8
d41 1
a41 1
 (query-replace-regexp "\\<\\([wiazouWIAZOU]\\)\\s +"
d48 7
d60 1
a60 1
       "\\<[aeiouwzAEIOUWZ]\\'" 
d76 10
a85 5
  (progn
    (if (local-key-binding " " 'tex-magic-space)
	(local-unset-key " ")
      (local-set-key " " tex-magic-space))
    (describe-key-briefly " ")))
@


1.2
log
@tex-hard-spaces: Zmieniony regexp.
tex-toggle-magic-space: Dodane, dodane przypisanie do `C-c SPC' via
  mode-specific-map.

Dodana inicjalizacja dla RefTeX-a via reftex-mode-hook.
@
text
@d9 1
a9 1
;; Version: 1.0
d11 1
a11 1
;; Created: 
d13 1
a13 1
;; $Id: sierotki.el,v 1.1 2002/11/15 00:16:05 jnareb Exp jnareb $
d19 7
a25 2
;;; ---------------------------------------------------------------------- 
;;; From: rysiek@@IPIPAN.GDA.PL (Ryszard Kubiak)
d27 2
a28 1
;; after one-letter Polish articles in the entire buffer
d36 4
a39 1
;;; ---------------------------------------------------------------------- 
d45 1
a45 1
       "^\\(\\s \\|~\\)?[aeiouwz]$" 
d52 5
a56 5
;; 'Rêcznie' mo¿na j± w³±czyæ za pomoc±
;; M-x local-set-key SPC tex-magic-space
;; albo (obecnie) za pomoc± C-c SPC.
;; UWAGA: Dzia³a gdy u¿ywamy AUCTeX-a; dla latex-mode nale¿y zmieniæ
;;        TeX-mode-map na tex-mode-map
d62 12
a73 6
    (if (equal (lookup-key TeX-mode-map " ") 'tex-magic-space)
        (progn
          (define-key TeX-mode-map " " nil)
          (local-unset-key " ")) ; to be sure
      (define-key TeX-mode-map " " 'tex-magic-space))
    (message "SPC is binded to %s" (lookup-key TeX-mode-map " "))))
d75 4
a78 2
;; mode-specific-map is keymap for characters following C-c
;;; From: adamp_at@@at_ipipan.waw.pl (Adam P.)
d81 1
d83 2
a84 1
(eval-after-load "tex" '(define-key TeX-mode-map " " 'tex-magic-space))
d86 1
a86 1
(eval-after-load "tex-mode" '(define-key tex-mode-map " " 'tex-magic-space))
d88 1
a88 4
(add-hook 'reftex-mode-hook
          (function
           (lambda ()
              (define-key reftex-mode-map " " 'tex-magic-space))))
@


1.1
log
@Initial revision
@
text
@d13 1
a13 1
;; $Id: $
d23 3
a25 1
(defun hard-spaces ()
d27 2
a28 2
 (query-replace-regexp "\\([ \C-j\C-m]+\\)\\([wiazouWIAZOU]\\)[ \C-j\C-m]+"
                       "\\1\\2~"))
d31 1
a31 1
;;; From: Michal Jankowski <michalj@@fuw.edu.pl>
d33 1
a33 1
"Magic-space - inserts non-breakable space after a single-letter word." 
d43 21
d68 5
@
